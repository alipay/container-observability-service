apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasource
  namespace: {{ .Values.global.namespace }}
data:
  datasource.yaml: |
    # Configuration file version
    apiVersion: 1

    # List of data sources to insert/update depending on what's
    # available in the database.
    datasources:
      # <string, required> Sets the name you use to refer to
      # the data source in panels and queries.
      - name: Infinity
        # <string, required> Sets the data source type.
        type: yesoreyeram-infinity-datasource
        # <string, required> Sets the access mode, either
        # proxy or direct (Server or Browser in the UI).
        # Some data sources are incompatible with any setting
        # but proxy (Server).
        access: proxy
        typeLogoUrl: public/plugins/yesoreyeram-infinity-datasource/img/icon.svg
        # <int> Sets the organization id. Defaults to orgId 1.
        orgId: 1
        # <string> Sets a custom UID to reference this
        # data source in other parts of the configuration.
        # If not specified, Grafana generates one.
        uid: c60b6674-0bb4-4104-ad02-fd5855c9dada
        # <string> Sets the data source's URL, including the
        # port.
        url: 
        # <string> Sets the database user, if necessary.
        user:
        # <string> Sets the database name, if necessary.
        database:
        # <bool> Enables basic authorization.
        basicAuth: false
        isDefault: true
        # <map> Fields to convert to JSON and store in jsonData.
        jsonData:
          global_queries: []
        version: 1
        # <bool> Allows users to edit data sources from the
        # Grafana UI.
        editable: true
      - name: JSON API
        # <string, required> Sets the data source type.
        type: marcusolsson-json-datasource
        # <string, required> Sets the access mode, either
        # proxy or direct (Server or Browser in the UI).
        # Some data sources are incompatible with any setting
        # but proxy (Server).
        access: proxy
        typeLogoUrl: public/plugins/marcusolsson-json-datasource/img/logo.svg
        # <int> Sets the organization id. Defaults to orgId 1.
        orgId: 1
        # <string> Sets a custom UID to reference this
        # data source in other parts of the configuration.
        # If not specified, Grafana generates one.
        uid: eb00f610-8f59-4ce6-a010-a3e582599ed0
        # <string> Sets the data source's URL, including the
        # port.
        url: http://grafanadi.lunettes.svc.cluster.local:8080/
        # <string> Sets the database user, if necessary.
        user:
        # <string> Sets the database name, if necessary.
        database:
        # <bool> Enables basic authorization.
        basicAuth: false
        isDefault: false
        # <map> Fields to convert to JSON and store in jsonData.
        jsonData:
        version: 1
        # <bool> Allows users to edit data sources from the
        # Grafana UI.
        editable: true
      - name: TestData
        # <string, required> Sets the data source type.
        type: testdata
        # <string, required> Sets the access mode, either
        # proxy or direct (Server or Browser in the UI).
        # Some data sources are incompatible with any setting
        # but proxy (Server).
        access: proxy
        typeLogoUrl: public/app/plugins/datasource/testdata/img/testdata.svg
        # <int> Sets the organization id. Defaults to orgId 1.
        orgId: 1
        # <string> Sets a custom UID to reference this
        # data source in other parts of the configuration.
        # If not specified, Grafana generates one.
        uid: ba23b400-4b53-4ba8-abc5-9753d89165b3
        # <string> Sets the data source's URL, including the
        # port.
        url: 
        # <string> Sets the database user, if necessary.
        user:
        # <string> Sets the database name, if necessary.
        database:
        # <bool> Enables basic authorization.
        basicAuth: false
        isDefault: false
        # <map> Fields to convert to JSON and store in jsonData.
        jsonData:
        version: 1
        # <bool> Allows users to edit data sources from the
        # Grafana UI.
        editable: true

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboards-provision
  namespace: {{ .Values.global.namespace }}
data:
  dashboards.yaml: |
    apiVersion: 1

    providers:
      # <string> an unique provider name. Required
      - name: 'Lunettes'
        # <int> Org id. Default to 1
        orgId: 1
        # <string> name of the dashboard folder.
        folder: ''
        # <string> folder UID. will be automatically generated if not specified
        folderUid: ''
        # <string> provider type. Default to 'file'
        type: file
        # <bool> disable dashboard deletion
        disableDeletion: false
        # <int> how often Grafana will scan for changed dashboards
        updateIntervalSeconds: 10
        # <bool> allow updating provisioned dashboards from the UI
        allowUiUpdates: true
        options:
          # <string, required> path to dashboard files on disk. Required when using the 'file' type
          path: /home/data/grafana/dashboards
          # <bool> use folder names from filesystem to create folders in Grafana
          foldersFromFilesStructure: false

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboards-general
  namespace: {{ .Values.global.namespace }}
data:
  lunettes-debugpod.json: |
    {
      "annotations": {
        "list": [
          {
            "builtIn": 1,
            "datasource": {
              "type": "grafana",
              "uid": "-- Grafana --"
            },
            "enable": true,
            "hide": true,
            "iconColor": "rgba(0, 211, 255, 1)",
            "name": "Annotations & Alerts",
            "type": "dashboard"
          },
          {
            "datasource": {
              "type": "marcusolsson-json-datasource",
              "uid": "eb00f610-8f59-4ce6-a010-a3e582599ed0"
            },
            "enable": true,
            "filter": {
              "exclude": false,
              "ids": [
                20
              ]
            },
            "iconColor": "yellow",
            "name": "容器状态变化",
            "target": {
              "cacheDurationSeconds": 300,
              "csvContent": "time,col1\n2023-06-26T12:10:54.525549+08:00,schedule\n2023-06-26T14:10:54.525549+08:00,ready\n2023-06-26T14:19:04.525549+08:00,running\n\n",
              "fields": [
                {
                  "jsonPath": "$.[*].title"
                },
                {
                  "jsonPath": "$.[*].time",
                  "language": "jsonpath",
                  "name": ""
                }
              ],
              "lines": 10,
              "method": "GET",
              "params": [
                [
                  "searchkey",
                  "$podinfo"
                ],
                [
                  "searchvalue",
                  "$podinfovalue"
                ]
              ],
              "queryParams": "",
              "refId": "Anno",
              "scenarioId": "csv_content",
              "urlPath": "/containerstatus"
            }
          },
          {
            "datasource": {
              "type": "marcusolsson-json-datasource",
              "uid": "eb00f610-8f59-4ce6-a010-a3e582599ed0"
            },
            "enable": true,
            "filter": {
              "exclude": false,
              "ids": [
                20
              ]
            },
            "iconColor": "purple",
            "name": "运维事件",
            "target": {
              "cacheDurationSeconds": 300,
              "csvContent": "time,col\n2023-06-26T12:39:54.525549+08:00,Restart\n2023-06-26T15:00:54.525549+08:00,Stop",
              "fields": [
                {
                  "jsonPath": ""
                }
              ],
              "lines": 10,
              "method": "GET",
              "params": [
                [
                  "searchkey",
                  "$podinfo"
                ],
                [
                  "searchvalue",
                  "$podinfovalue"
                ]
              ],
              "queryParams": "",
              "refId": "Anno",
              "scenarioId": "csv_content",
              "urlPath": "/containerevents"
            }
          }
        ]
      },
      "editable": true,
      "fiscalYearStartMonth": 0,
      "graphTooltip": 0,
      "id": 1,
      "links": [],
      "liveNow": false,
      "panels": [
        {
          "collapsed": false,
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 0
          },
          "id": 15,
          "panels": [],
          "title": "容器信息",
          "type": "row"
        },
        {
          "datasource": {
            "type": "yesoreyeram-infinity-datasource",
            "uid": "c60b6674-0bb4-4104-ad02-fd5855c9dada"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "align": "auto",
                "cellOptions": {
                  "type": "auto"
                },
                "inspect": false
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "Zone"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 100
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "BizSource"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 100
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "AppName"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 100
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 5,
            "w": 7,
            "x": 0,
            "y": 1
          },
          "id": 12,
          "options": {
            "cellHeight": "sm",
            "footer": {
              "countRows": false,
              "fields": "",
              "reducer": [
                "sum"
              ],
              "show": false
            },
            "showHeader": true
          },
          "pluginVersion": "10.4.1",
          "targets": [
            {
              "columns": [],
              "datasource": {
                "type": "yesoreyeram-infinity-datasource",
                "uid": "fda4cfc9-402a-48d4-a353-7ebdfad103d9"
              },
              "filters": [],
              "format": "table",
              "global_query_id": "",
              "refId": "A",
              "root_selector": "",
              "source": "url",
              "type": "json",
              "url": "http://grafanadi.lunettes.svc.cluster.local:8080/bizinfotable?searchkey=$podinfo&searchvalue=$podinfovalue",
              "url_options": {
                "data": "",
                "method": "GET"
              }
            }
          ],
          "title": "平台信息",
          "transformations": [
            {
              "id": "organize",
              "options": {
                "excludeByName": {},
                "indexByName": {
                  "AppName": 1,
                  "BizSource": 2,
                  "WorkOrderId": 3,
                  "Zone": 0
                },
                "renameByName": {}
              }
            }
          ],
          "type": "table"
        },
        {
          "datasource": {
            "type": "yesoreyeram-infinity-datasource",
            "uid": "c60b6674-0bb4-4104-ad02-fd5855c9dada"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "fixed"
              },
              "custom": {
                "align": "auto",
                "cellOptions": {
                  "type": "color-background"
                },
                "inspect": false
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "PodPhase"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 120
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "super-light-orange",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "State"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 120
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "super-light-orange",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "LastActiveAt"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "blue",
                      "mode": "fixed"
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 5,
            "w": 8,
            "x": 7,
            "y": 1
          },
          "id": 14,
          "options": {
            "cellHeight": "sm",
            "footer": {
              "countRows": false,
              "fields": "",
              "reducer": [
                "sum"
              ],
              "show": false
            },
            "showHeader": true
          },
          "pluginVersion": "10.4.1",
          "targets": [
            {
              "columns": [],
              "datasource": {
                "type": "yesoreyeram-infinity-datasource",
                "uid": "fda4cfc9-402a-48d4-a353-7ebdfad103d9"
              },
              "filters": [],
              "format": "table",
              "global_query_id": "",
              "refId": "A",
              "root_selector": "",
              "source": "url",
              "type": "json",
              "url": "http://grafanadi.lunettes.svc.cluster.local:8080/podstatustable?searchkey=$podinfo&searchvalue=$podinfovalue",
              "url_options": {
                "data": "",
                "method": "GET"
              }
            }
          ],
          "title": "时间及状态信息",
          "transformations": [
            {
              "id": "organize",
              "options": {
                "excludeByName": {},
                "indexByName": {
                  "CreatedAt": 2,
                  "LastActiveAt": 3,
                  "PodPhase": 1,
                  "State": 0
                },
                "renameByName": {}
              }
            }
          ],
          "type": "table"
        },
        {
          "datasource": {
            "type": "yesoreyeram-infinity-datasource",
            "uid": "c60b6674-0bb4-4104-ad02-fd5855c9dada"
          },
          "gridPos": {
            "h": 14,
            "w": 9,
            "x": 15,
            "y": 1
          },
          "id": 21,
          "options": {
            "edges": {},
            "nodes": {
              "arcs": [
                {
                  "color": "#F2CC0C",
                  "field": "arc__yellow"
                },
                {
                  "color": "#3274D9",
                  "field": "arc__blue"
                },
                {
                  "color": "#E02F44",
                  "field": "arc__red"
                },
                {
                  "color": "#56A64B",
                  "field": "arc__green"
                }
              ]
            }
          },
          "targets": [
            {
              "columns": [],
              "datasource": {
                "type": "yesoreyeram-infinity-datasource",
                "uid": "fda4cfc9-402a-48d4-a353-7ebdfad103d9"
              },
              "filters": [],
              "format": "as-is",
              "global_query_id": "",
              "refId": "A",
              "root_selector": "",
              "source": "url",
              "type": "json",
              "url": "http://grafanadi.lunettes.svc.cluster.local:8080/podyamlgraphnodes?searchkey=$podinfo&searchvalue=$podinfovalue",
              "url_options": {
                "data": "",
                "method": "GET"
              }
            },
            {
              "columns": [],
              "datasource": {
                "type": "yesoreyeram-infinity-datasource",
                "uid": "fda4cfc9-402a-48d4-a353-7ebdfad103d9"
              },
              "filters": [],
              "format": "as-is",
              "global_query_id": "",
              "hide": false,
              "refId": "B",
              "root_selector": "",
              "source": "url",
              "type": "json",
              "url": "http://grafanadi.lunettes.svc.cluster.local:8080/podyamlgraphedges?searchkey=$podinfo&searchvalue=$podinfovalue",
              "url_options": {
                "data": "",
                "method": "GET"
              }
            }
          ],
          "title": "容器拓扑",
          "type": "nodeGraph"
        },
        {
          "datasource": {
            "type": "yesoreyeram-infinity-datasource",
            "uid": "c60b6674-0bb4-4104-ad02-fd5855c9dada"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "align": "auto",
                "cellOptions": {
                  "type": "auto"
                },
                "inspect": false
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "transparent",
                    "value": null
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "PodYaml"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 80
                  },
                  {
                    "id": "links",
                    "value": [
                      {
                        "targetBlank": true,
                        "title": "yaml",
                        "url": "/d/podyamllinks/podyaml?var-uid=${__data.fields.PodUID}"
                      }
                    ]
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "super-light-green",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "NodeYaml"
                },
                "properties": [
                  {
                    "id": "links",
                    "value": [
                      {
                        "targetBlank": true,
                        "title": "NodeYaml",
                        "url": "/d/nodeyamllinks/nodeyaml?var-nodeName=${__data.fields.NodeName}"
                      }
                    ]
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "super-light-green",
                      "mode": "fixed"
                    }
                  },
                  {
                    "id": "custom.width",
                    "value": 80
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "ClusterName"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 100
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "PodIP"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 120
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "NodeIP"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 120
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 9,
            "w": 15,
            "x": 0,
            "y": 6
          },
          "id": 13,
          "options": {
            "cellHeight": "sm",
            "footer": {
              "countRows": false,
              "fields": "",
              "reducer": [
                "sum"
              ],
              "show": false
            },
            "showHeader": true,
            "sortBy": []
          },
          "pluginVersion": "10.4.1",
          "targets": [
            {
              "columns": [],
              "datasource": {
                "type": "yesoreyeram-infinity-datasource",
                "uid": "fda4cfc9-402a-48d4-a353-7ebdfad103d9"
              },
              "filters": [],
              "format": "table",
              "global_query_id": "",
              "refId": "A",
              "root_selector": "",
              "source": "url",
              "type": "json",
              "url": "http://grafanadi.lunettes.svc.cluster.local:8080/podinfotable?searchkey=$podinfo&searchvalue=$podinfovalue",
              "url_options": {
                "data": "",
                "method": "GET"
              }
            }
          ],
          "title": "Pod信息",
          "transformations": [
            {
              "id": "organize",
              "options": {
                "excludeByName": {},
                "indexByName": {
                  "ClusterName": 1,
                  "Namespace": 2,
                  "NodeIP": 7,
                  "NodeName": 6,
                  "NodeYaml": 8,
                  "PodIP": 3,
                  "PodName": 0,
                  "PodUID": 4,
                  "PodYaml": 5
                },
                "renameByName": {}
              }
            }
          ],
          "type": "table"
        },
        {
          "datasource": {
            "type": "yesoreyeram-infinity-datasource",
            "uid": "c60b6674-0bb4-4104-ad02-fd5855c9dada"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "align": "auto",
                "cellOptions": {
                  "type": "color-background"
                },
                "inspect": false
              },
              "mappings": [
                {
                  "options": {
                    "success": {
                      "color": "light-green",
                      "index": 0
                    }
                  },
                  "type": "value"
                },
                {
                  "options": {
                    "pattern": "Error.*",
                    "result": {
                      "color": "red",
                      "index": 1
                    }
                  },
                  "type": "regex"
                }
              ],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "transparent",
                    "value": null
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "key"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 180
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "super-light-blue",
                      "mode": "fixed"
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 8,
            "w": 8,
            "x": 0,
            "y": 15
          },
          "id": 2,
          "options": {
            "cellHeight": "sm",
            "footer": {
              "countRows": false,
              "fields": "",
              "reducer": [
                "sum"
              ],
              "show": false
            },
            "showHeader": false
          },
          "pluginVersion": "10.4.1",
          "targets": [
            {
              "columns": [],
              "datasource": {
                "type": "yesoreyeram-infinity-datasource",
                "uid": "fda4cfc9-402a-48d4-a353-7ebdfad103d9"
              },
              "filters": [],
              "format": "table",
              "global_query_id": "",
              "refId": "A",
              "root_selector": "",
              "source": "url",
              "type": "json",
              "url": "http://grafanadi.lunettes.svc.cluster.local:8080/deliverypodcreatetable?searchkey=$podinfo&searchvalue=$podinfovalue",
              "url_options": {
                "data": "",
                "method": "GET"
              }
            }
          ],
          "title": "交付数据 - 容器创建",
          "transformations": [
            {
              "id": "organize",
              "options": {}
            }
          ],
          "type": "table"
        },
        {
          "datasource": {
            "type": "yesoreyeram-infinity-datasource",
            "uid": "c60b6674-0bb4-4104-ad02-fd5855c9dada"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "align": "auto",
                "cellOptions": {
                  "type": "color-background"
                },
                "inspect": false
              },
              "mappings": [
                {
                  "options": {
                    "success": {
                      "color": "super-light-green",
                      "index": 0
                    }
                  },
                  "type": "value"
                }
              ],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "transparent",
                    "value": null
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "key"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 180
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "super-light-blue",
                      "mode": "fixed"
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 8,
            "w": 8,
            "x": 8,
            "y": 15
          },
          "id": 18,
          "options": {
            "cellHeight": "sm",
            "footer": {
              "countRows": false,
              "fields": "",
              "reducer": [
                "sum"
              ],
              "show": false
            },
            "showHeader": false
          },
          "pluginVersion": "10.4.1",
          "targets": [
            {
              "columns": [],
              "csvContent": "\"key\",\"value\"\n",
              "datasource": {
                "type": "testdata",
                "uid": "e3b3da0b-5fcf-4c2a-8ea8-e3a5bc54fa05"
              },
              "filters": [],
              "format": "table",
              "global_query_id": "",
              "refId": "A",
              "root_selector": "",
              "scenarioId": "csv_content",
              "source": "url",
              "type": "json",
              "url": "http://grafanadi.lunettes.svc.cluster.local:8080/deliverypoddeletetable?searchkey=$podinfo&searchvalue=$podinfovalue",
              "url_options": {
                "data": "",
                "method": "GET"
              }
            }
          ],
          "title": "交付数据 - 容器删除",
          "type": "table"
        },
        {
          "datasource": {
            "type": "yesoreyeram-infinity-datasource",
            "uid": "c60b6674-0bb4-4104-ad02-fd5855c9dada"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "align": "auto",
                "cellOptions": {
                  "type": "color-background"
                },
                "inspect": false
              },
              "mappings": [
                {
                  "options": {
                    "success": {
                      "color": "super-light-green",
                      "index": 0
                    }
                  },
                  "type": "value"
                }
              ],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "transparent",
                    "value": null
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "key"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 120
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "super-light-blue",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "times"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 100
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "light-blue",
                      "mode": "fixed"
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 8,
            "w": 8,
            "x": 16,
            "y": 15
          },
          "id": 19,
          "options": {
            "cellHeight": "sm",
            "footer": {
              "countRows": false,
              "enablePagination": true,
              "fields": "",
              "reducer": [
                "sum"
              ],
              "show": false
            },
            "showHeader": false
          },
          "pluginVersion": "10.4.1",
          "targets": [
            {
              "columns": [],
              "csvContent": "\"times\",\"key\",\"value\"\n",
              "datasource": {
                "type": "testdata",
                "uid": "e3b3da0b-5fcf-4c2a-8ea8-e3a5bc54fa05"
              },
              "filters": [],
              "format": "table",
              "global_query_id": "",
              "refId": "A",
              "root_selector": "",
              "scenarioId": "csv_content",
              "source": "url",
              "type": "json",
              "url": "http://grafanadi.lunettes.svc.cluster.local:8080/deliverypodupgradetable?searchkey=$podinfo&searchvalue=$podinfovalue",
              "url_options": {
                "data": "",
                "method": "GET"
              }
            }
          ],
          "title": "交付数据 - 容器升级",
          "type": "table"
        },
        {
          "datasource": {
            "type": "yesoreyeram-infinity-datasource",
            "uid": "c60b6674-0bb4-4104-ad02-fd5855c9dada"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "fillOpacity": 38,
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineWidth": 0,
                "spanNulls": false
              },
              "mappings": [
                {
                  "options": {
                    "None": {
                      "color": "#dfddde",
                      "index": 4,
                      "text": "none"
                    },
                    "PodCreate": {
                      "color": "light-green",
                      "index": 0,
                      "text": "create"
                    },
                    "PodDelete": {
                      "color": "light-purple",
                      "index": 3,
                      "text": "delete"
                    },
                    "PodRunning": {
                      "color": "#808080",
                      "index": 1,
                      "text": "running"
                    },
                    "PodUpgrade": {
                      "color": "super-light-yellow",
                      "index": 2,
                      "text": "update"
                    }
                  },
                  "type": "value"
                }
              ],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "transparent"
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "col1"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "生命周期阶段"
                  },
                  {
                    "id": "custom.lineWidth",
                    "value": 0
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "col2"
                },
                "properties": [
                  {
                    "id": "custom.lineWidth",
                    "value": 1
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 6,
            "w": 24,
            "x": 0,
            "y": 23
          },
          "id": 20,
          "options": {
            "alignValue": "center",
            "legend": {
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "mergeValues": true,
            "rowHeight": 0.64,
            "showValue": "auto",
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "columns": [],
              "csvContent": "time,col1\n\n",
              "datasource": {
                "type": "testdata",
                "uid": "e3b3da0b-5fcf-4c2a-8ea8-e3a5bc54fa05"
              },
              "filters": [],
              "format": "table",
              "global_query_id": "",
              "parser": "uql",
              "refId": "A",
              "root_selector": "",
              "scenarioId": "csv_content",
              "source": "url",
              "type": "json",
              "url": "http://grafanadi.lunettes.svc.cluster.local:8080/containerlifecycle?searchkey=$podinfo&searchvalue=$podinfovalue",
              "url_options": {
                "data": "",
                "method": "GET"
              }
            }
          ],
          "title": "容器生命周期",
          "type": "state-timeline"
        },
        {
          "datasource": {
            "type": "yesoreyeram-infinity-datasource",
            "uid": "c60b6674-0bb4-4104-ad02-fd5855c9dada"
          },
          "gridPos": {
            "h": 14,
            "w": 24,
            "x": 0,
            "y": 29
          },
          "id": 3,
          "options": {
            "dedupStrategy": "none",
            "enableLogDetails": true,
            "prettifyLogMessage": true,
            "showCommonLabels": false,
            "showLabels": false,
            "showTime": true,
            "sortOrder": "Descending",
            "wrapLogMessage": false
          },
          "pluginVersion": "10.0.1",
          "targets": [
            {
              "columns": [],
              "datasource": {
                "type": "yesoreyeram-infinity-datasource",
                "uid": "fda4cfc9-402a-48d4-a353-7ebdfad103d9"
              },
              "filters": [],
              "format": "as-is",
              "global_query_id": "",
              "refId": "A",
              "root_selector": "",
              "source": "url",
              "type": "json",
              "url": "http://grafanadi.lunettes.svc.cluster.local:8080/keylifecycleevents?searchkey=$podinfo&searchvalue=$podinfovalue",
              "url_options": {
                "data": "",
                "method": "GET"
              }
            }
          ],
          "title": "生命周期关键事件",
          "type": "logs"
        },
        {
          "datasource": {
            "type": "yesoreyeram-infinity-datasource",
            "uid": "c60b6674-0bb4-4104-ad02-fd5855c9dada"
          },
          "gridPos": {
            "h": 13,
            "w": 24,
            "x": 0,
            "y": 43
          },
          "id": 4,
          "targets": [
            {
              "columns": [],
              "datasource": {
                "type": "yesoreyeram-infinity-datasource",
                "uid": "fda4cfc9-402a-48d4-a353-7ebdfad103d9"
              },
              "filters": [],
              "format": "as-is",
              "global_query_id": "",
              "refId": "A",
              "root_selector": "",
              "source": "url",
              "type": "json",
              "url": "http://grafanadi.lunettes.svc.cluster.local:8080/deliverytrace?searchkey=$podinfo&searchvalue=$podinfovalue",
              "url_options": {
                "data": "",
                "method": "GET"
              }
            }
          ],
          "title": "交付追踪",
          "type": "traces"
        }
      ],
      "refresh": "",
      "schemaVersion": 39,
      "tags": [],
      "templating": {
        "list": [
          {
            "current": {
              "selected": false,
              "text": "name",
              "value": "name"
            },
            "hide": 0,
            "includeAll": false,
            "multi": false,
            "name": "podinfo",
            "options": [
              {
                "selected": true,
                "text": "name",
                "value": "name"
              },
              {
                "selected": false,
                "text": "hostname",
                "value": "hostname"
              },
              {
                "selected": false,
                "text": "podip",
                "value": "podip"
              },
              {
                "selected": false,
                "text": "uid",
                "value": "uid"
              }
            ],
            "query": "name,hostname,podip,uid",
            "queryValue": "",
            "skipUrlSync": false,
            "type": "custom"
          },
          {
            "current": {
              "selected": false,
              "text": "",
              "value": ""
            },
            "hide": 0,
            "name": "podinfovalue",
            "options": [
              {
                "selected": true,
                "text": "",
                "value": ""
              }
            ],
            "query": "",
            "skipUrlSync": false,
            "type": "textbox"
          }
        ]
      },
      "time": {
        "from": "now-30m",
        "to": "now"
      },
      "timepicker": {},
      "timezone": "",
      "title": "Lunettes-debugpod",
      "uid": "lunettes-debugpod",
      "version": 3,
      "weekStart": ""
    }
  lunettes-debugslo.json: |
    {
      "annotations": {
        "list": [
          {
            "builtIn": 1,
            "datasource": {
              "type": "grafana",
              "uid": "-- Grafana --"
            },
            "enable": true,
            "hide": true,
            "iconColor": "rgba(0, 211, 255, 1)",
            "name": "Annotations & Alerts",
            "target": {
              "limit": 100,
              "matchAny": false,
              "tags": [],
              "type": "dashboard"
            },
            "type": "dashboard"
          }
        ]
      },
      "editable": true,
      "fiscalYearStartMonth": 0,
      "graphTooltip": 0,
      "id": 2,
      "links": [],
      "liveNow": false,
      "panels": [
        {
          "collapsed": false,
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 0
          },
          "id": 15,
          "panels": [],
          "title": "交付SLO信息",
          "type": "row"
        },
        {
          "datasource": {
            "type": "yesoreyeram-infinity-datasource",
            "uid": "c60b6674-0bb4-4104-ad02-fd5855c9dada"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                }
              },
              "mappings": []
            },
            "overrides": []
          },
          "gridPos": {
            "h": 7,
            "w": 8,
            "x": 0,
            "y": 1
          },
          "id": 16,
          "options": {
            "displayLabels": [
              "name",
              "percent"
            ],
            "legend": {
              "displayMode": "list",
              "placement": "right",
              "showLegend": true,
              "values": [
                "percent"
              ]
            },
            "pieType": "pie",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "/.*/",
              "values": false
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "columns": [],
              "datasource": {
                "type": "yesoreyeram-infinity-datasource",
                "uid": "c60b6674-0bb4-4104-ad02-fd5855c9dada"
              },
              "filters": [],
              "format": "table",
              "global_query_id": "",
              "refId": "A",
              "root_selector": "",
              "source": "url",
              "type": "json",
              "url": "http://grafanadi.lunettes.svc.cluster.local:8080/elasticaggregations?index=slo_data&doctype=_doc&filters=Namespace.keyword:$namespace*Cluster.keyword:$cluster*SLOViolationReason.keyword:$deliveryresult&terms=Cluster.keyword&timeattr=Created&gte=$__from&lte=$__to",
              "url_options": {
                "data": "",
                "method": "GET"
              }
            }
          ],
          "title": "交付量",
          "type": "piechart"
        },
        {
          "datasource": {
            "type": "yesoreyeram-infinity-datasource",
            "uid": "c60b6674-0bb4-4104-ad02-fd5855c9dada"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                }
              },
              "mappings": []
            },
            "overrides": [
              {
                "__systemRef": "hideSeriesFrom",
                "matcher": {
                  "id": "byNames",
                  "options": {
                    "mode": "exclude",
                    "names": [
                      "[object Object]",
                      "AllocateIPTimeout",
                      "ContainerCreateTooMuchTime",
                      "ContainerNotReady",
                      "success"
                    ],
                    "prefix": "All except:",
                    "readOnly": true
                  }
                },
                "properties": [
                  {
                    "id": "custom.hideFrom",
                    "value": {
                      "legend": false,
                      "tooltip": false,
                      "viz": true
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 7,
            "w": 8,
            "x": 8,
            "y": 1
          },
          "id": 19,
          "options": {
            "displayLabels": [
              "name",
              "percent"
            ],
            "legend": {
              "displayMode": "list",
              "placement": "right",
              "showLegend": true,
              "values": [
                "percent"
              ]
            },
            "pieType": "pie",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "tooltip": {
              "mode": "multi",
              "sort": "desc"
            }
          },
          "targets": [
            {
              "columns": [],
              "datasource": {
                "type": "yesoreyeram-infinity-datasource",
                "uid": "Q-MNlECVz"
              },
              "filters": [],
              "format": "table",
              "global_query_id": "",
              "refId": "A",
              "root_selector": "",
              "source": "url",
              "type": "json",
              "url": "http://grafanadi.lunettes.svc.cluster.local:8080/elasticaggregations?index=slo_data&doctype=_doc&filters=Namespace.keyword:$namespace*Cluster.keyword:$cluster*SLOViolationReason.keyword:$deliveryresult&terms=SLOViolationReason.keyword&timeattr=Created&gte=$__from&lte=$__to",
              "url_options": {
                "data": "",
                "method": "GET"
              }
            }
          ],
          "title": "结果分布",
          "type": "piechart"
        },
        {
          "datasource": {
            "type": "yesoreyeram-infinity-datasource",
            "uid": "c60b6674-0bb4-4104-ad02-fd5855c9dada"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "ns"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 7,
            "w": 8,
            "x": 16,
            "y": 1
          },
          "id": 20,
          "options": {
            "displayMode": "gradient",
            "minVizHeight": 10,
            "minVizWidth": 0,
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "showUnfilled": true,
            "valueMode": "color"
          },
          "pluginVersion": "10.1.5",
          "targets": [
            {
              "columns": [],
              "datasource": {
                "type": "yesoreyeram-infinity-datasource",
                "uid": "Q-MNlECVz"
              },
              "filters": [],
              "format": "table",
              "global_query_id": "",
              "refId": "A",
              "root_selector": "",
              "source": "url",
              "type": "json",
              "url": "http://grafanadi.lunettes.svc.cluster.local:8080/elasticaggregations?index=slo_data&doctype=_doc&filters=Namespace.keyword:$namespace*Cluster.keyword:$cluster*SLOViolationReason:success&percentiles=DeliveryDuration&timeattr=Created&gte=$__from&lte=$__to",
              "url_options": {
                "data": "",
                "method": "GET"
              }
            }
          ],
          "title": "交付百分位延迟",
          "type": "bargauge"
        },
        {
          "datasource": {
            "type": "yesoreyeram-infinity-datasource",
            "uid": "c60b6674-0bb4-4104-ad02-fd5855c9dada"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "short"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 7,
            "w": 8,
            "x": 0,
            "y": 8
          },
          "id": 17,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "columns": [],
              "datasource": {
                "type": "yesoreyeram-infinity-datasource",
                "uid": "Q-MNlECVz"
              },
              "filters": [],
              "format": "as-is",
              "global_query_id": "",
              "refId": "A",
              "root_selector": "",
              "source": "url",
              "type": "json",
              "url": "http://grafanadi.lunettes.svc.cluster.local:8080/elasticaggregations?index=slo_data&doctype=_doc&filters=Namespace.keyword:$namespace*Cluster.keyword:$cluster*SLOViolationReason.keyword:$deliveryresult&terms=Cluster.keyword&overtime=$timestep&timeattr=Created&gte=$__from&lte=$__to",
              "url_options": {
                "data": "",
                "method": "GET"
              }
            }
          ],
          "title": "交付量",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "yesoreyeram-infinity-datasource",
            "uid": "c60b6674-0bb4-4104-ad02-fd5855c9dada"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 7,
            "w": 8,
            "x": 8,
            "y": 8
          },
          "id": 23,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "columns": [],
              "datasource": {
                "type": "yesoreyeram-infinity-datasource",
                "uid": "Q-MNlECVz"
              },
              "filters": [],
              "format": "as-is",
              "global_query_id": "",
              "refId": "A",
              "root_selector": "",
              "source": "url",
              "type": "json",
              "url": "http://grafanadi.lunettes.svc.cluster.local:8080/elasticaggregations?index=slo_data&doctype=_doc&filters=Namespace.keyword:$namespace*Cluster.keyword:$cluster*SLOViolationReason.keyword:$deliveryresult&terms=SLOViolationReason.keyword&timeattr=Created&overtime=$timestep&gte=$__from&lte=$__to",
              "url_options": {
                "data": "",
                "method": "GET"
              }
            }
          ],
          "title": "结果分布",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "yesoreyeram-infinity-datasource",
            "uid": "c60b6674-0bb4-4104-ad02-fd5855c9dada"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "ns"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 7,
            "w": 8,
            "x": 16,
            "y": 8
          },
          "id": 21,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "columns": [],
              "datasource": {
                "type": "yesoreyeram-infinity-datasource",
                "uid": "Q-MNlECVz"
              },
              "filters": [],
              "format": "as-is",
              "global_query_id": "",
              "refId": "A",
              "root_selector": "",
              "source": "url",
              "type": "json",
              "url": "http://grafanadi.lunettes.svc.cluster.local:8080/elasticaggregations?index=slo_data&doctype=_doc&filters=Namespace.keyword:$namespace*Cluster.keyword:$cluster*SLOViolationReason:success&percentiles=DeliveryDuration&timeattr=Created&overtime=$timestep&gte=$__from&lte=$__to",
              "url_options": {
                "data": "",
                "method": "GET"
              }
            }
          ],
          "title": "交付百分位延迟",
          "type": "timeseries"
        },
        {
          "collapsed": false,
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 15
          },
          "id": 6,
          "panels": [],
          "title": "交付SLO诊断",
          "type": "row"
        },
        {
          "datasource": {
            "type": "yesoreyeram-infinity-datasource",
            "uid": "c60b6674-0bb4-4104-ad02-fd5855c9dada"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "align": "auto",
                "cellOptions": {
                  "type": "auto"
                },
                "inspect": false
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "transparent",
                    "value": null
                  },
                  {
                    "color": "light-yellow",
                    "value": 30
                  },
                  {
                    "color": "orange",
                    "value": 100
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "cluster"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "super-light-blue",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "number"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 120
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 12,
            "w": 5,
            "x": 0,
            "y": 16
          },
          "id": 1,
          "options": {
            "cellHeight": "sm",
            "footer": {
              "countRows": false,
              "enablePagination": false,
              "fields": "",
              "reducer": [
                "sum"
              ],
              "show": false
            },
            "showHeader": true,
            "sortBy": [
              {
                "desc": true,
                "displayName": "number"
              }
            ]
          },
          "pluginVersion": "10.1.5",
          "targets": [
            {
              "columns": [],
              "datasource": {
                "type": "yesoreyeram-infinity-datasource",
                "uid": "c60b6674-0bb4-4104-ad02-fd5855c9dada"
              },
              "filters": [],
              "format": "table",
              "global_query_id": "",
              "refId": "A",
              "root_selector": "",
              "source": "url",
              "type": "json",
              "url": "http://grafanadi.lunettes.svc.cluster.local:8080/clusterdistribute?type=$type&deliveryresult=$deliveryresult&from=$__from&to=$__to&cluster=$cluster",
              "url_options": {
                "data": "",
                "method": "GET"
              }
            }
          ],
          "title": "集群分布",
          "type": "table"
        },
        {
          "datasource": {
            "type": "yesoreyeram-infinity-datasource",
            "uid": "c60b6674-0bb4-4104-ad02-fd5855c9dada"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "align": "auto",
                "cellOptions": {
                  "type": "auto"
                },
                "inspect": false
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "transparent",
                    "value": null
                  },
                  {
                    "color": "light-yellow",
                    "value": 30
                  },
                  {
                    "color": "orange",
                    "value": 100
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "namespace"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "super-light-blue",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "number"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 120
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 12,
            "w": 6,
            "x": 5,
            "y": 16
          },
          "id": 2,
          "options": {
            "cellHeight": "sm",
            "footer": {
              "countRows": false,
              "enablePagination": false,
              "fields": "",
              "reducer": [
                "sum"
              ],
              "show": false
            },
            "showHeader": true,
            "sortBy": [
              {
                "desc": true,
                "displayName": "number"
              }
            ]
          },
          "pluginVersion": "10.1.5",
          "targets": [
            {
              "columns": [],
              "datasource": {
                "type": "yesoreyeram-infinity-datasource",
                "uid": "c60b6674-0bb4-4104-ad02-fd5855c9dada"
              },
              "filters": [],
              "format": "table",
              "global_query_id": "",
              "refId": "A",
              "root_selector": "",
              "source": "url",
              "type": "json",
              "url": "http://grafanadi.lunettes.svc.cluster.local:8080/namespacedistribute?type=$type&deliveryresult=$deliveryresult&from=$__from&to=$__to&cluster=$cluster",
              "url_options": {
                "data": "",
                "method": "GET"
              }
            }
          ],
          "title": "namespace分布",
          "type": "table"
        },
        {
          "datasource": {
            "type": "yesoreyeram-infinity-datasource",
            "uid": "c60b6674-0bb4-4104-ad02-fd5855c9dada"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "align": "auto",
                "cellOptions": {
                  "type": "auto"
                },
                "inspect": false
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "transparent",
                    "value": null
                  },
                  {
                    "color": "light-yellow",
                    "value": 30
                  },
                  {
                    "color": "orange",
                    "value": 100
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "SLO"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "super-light-blue",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "number"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 120
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 12,
            "w": 6,
            "x": 11,
            "y": 16
          },
          "id": 3,
          "options": {
            "cellHeight": "sm",
            "footer": {
              "countRows": false,
              "enablePagination": false,
              "fields": "",
              "reducer": [
                "sum"
              ],
              "show": false
            },
            "showHeader": true,
            "sortBy": [
              {
                "desc": true,
                "displayName": "number"
              }
            ]
          },
          "pluginVersion": "10.1.5",
          "targets": [
            {
              "columns": [],
              "datasource": {
                "type": "yesoreyeram-infinity-datasource",
                "uid": "c60b6674-0bb4-4104-ad02-fd5855c9dada"
              },
              "filters": [],
              "format": "table",
              "global_query_id": "",
              "refId": "A",
              "root_selector": "",
              "source": "url",
              "type": "json",
              "url": "http://grafanadi.lunettes.svc.cluster.local:8080/podtypedistribute?type=$type&deliveryresult=$deliveryresult&from=$__from&to=$__to&cluster=$cluster",
              "url_options": {
                "data": "",
                "method": "GET"
              }
            }
          ],
          "title": "SLO类型分布",
          "type": "table"
        },
        {
          "datasource": {
            "type": "yesoreyeram-infinity-datasource",
            "uid": "c60b6674-0bb4-4104-ad02-fd5855c9dada"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "align": "auto",
                "cellOptions": {
                  "type": "auto"
                },
                "inspect": false
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "transparent",
                    "value": null
                  },
                  {
                    "color": "light-yellow",
                    "value": 30
                  },
                  {
                    "color": "orange",
                    "value": 100
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "node"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "super-light-blue",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "number"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 120
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 12,
            "w": 7,
            "x": 17,
            "y": 16
          },
          "id": 4,
          "options": {
            "cellHeight": "sm",
            "footer": {
              "countRows": false,
              "enablePagination": false,
              "fields": "",
              "reducer": [
                "sum"
              ],
              "show": false
            },
            "showHeader": true,
            "sortBy": [
              {
                "desc": true,
                "displayName": "number"
              }
            ]
          },
          "pluginVersion": "10.1.5",
          "targets": [
            {
              "columns": [],
              "datasource": {
                "type": "yesoreyeram-infinity-datasource",
                "uid": "c60b6674-0bb4-4104-ad02-fd5855c9dada"
              },
              "filters": [],
              "format": "table",
              "global_query_id": "",
              "refId": "A",
              "root_selector": "",
              "source": "url",
              "type": "json",
              "url": "http://grafanadi.lunettes.svc.cluster.local:8080/nodedistribute?type=$type&deliveryresult=$deliveryresult&from=$__from&to=$__to&cluster=$cluster",
              "url_options": {
                "data": "",
                "method": "GET"
              }
            }
          ],
          "title": "节点分布",
          "type": "table"
        },
        {
          "datasource": {
            "type": "yesoreyeram-infinity-datasource",
            "uid": "c60b6674-0bb4-4104-ad02-fd5855c9dada"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "align": "auto",
                "cellOptions": {
                  "type": "auto"
                },
                "inspect": false
              },
              "mappings": [
                {
                  "options": {
                    "success": {
                      "color": "super-light-green",
                      "index": 0
                    }
                  },
                  "type": "value"
                }
              ],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "#fbf6f600"
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "诊断链接"
                },
                "properties": [
                  {
                    "id": "links",
                    "value": [
                      {
                        "targetBlank": true,
                        "title": "Pod信息",
                        "url": "d/lunettes-debugpod/lunettes-debugpod?var-podinfo=uid&var-podinfovalue=${__data.fields.PodUid}"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 12,
            "w": 24,
            "x": 0,
            "y": 28
          },
          "id": 5,
          "options": {
            "cellHeight": "sm",
            "footer": {
              "countRows": false,
              "fields": "",
              "reducer": [
                "sum"
              ],
              "show": false
            },
            "showHeader": true
          },
          "pluginVersion": "10.0.1",
          "targets": [
            {
              "columns": [],
              "datasource": {
                "type": "yesoreyeram-infinity-datasource",
                "uid": "c60b6674-0bb4-4104-ad02-fd5855c9dada"
              },
              "filters": [],
              "format": "table",
              "global_query_id": "",
              "refId": "A",
              "root_selector": "",
              "source": "url",
              "type": "json",
              "url": "http://grafanadi.lunettes.svc.cluster.local:8080/podlist?type=$type&deliveryresult=$deliveryresult&from=$__from&to=$__to&cluster=$cluster",
              "url_options": {
                "data": "",
                "method": "GET"
              }
            }
          ],
          "title": "容器列表",
          "type": "table"
        }
      ],
      "refresh": "",
      "schemaVersion": 38,
      "style": "dark",
      "tags": [],
      "templating": {
        "list": [
          {
            "current": {
              "selected": false,
              "text": "Create",
              "value": "Create"
            },
            "hide": 0,
            "includeAll": false,
            "label": "交付类型",
            "multi": false,
            "name": "type",
            "options": [
              {
                "selected": true,
                "text": "Create",
                "value": "Create"
              }
            ],
            "query": "Create",
            "queryValue": "",
            "skipUrlSync": false,
            "type": "custom"
          },
          {
            "current": {
              "selected": false,
              "text": "",
              "value": ""
            },
            "hide": 0,
            "label": "集群",
            "name": "cluster",
            "options": [
              {
                "selected": true,
                "text": "",
                "value": ""
              }
            ],
            "query": "",
            "skipUrlSync": false,
            "type": "textbox"
          },
          {
            "current": {
              "selected": false,
              "text": "",
              "value": ""
            },
            "hide": 0,
            "label": "Namespace",
            "name": "namespace",
            "options": [
              {
                "selected": true,
                "text": "",
                "value": ""
              }
            ],
            "query": "",
            "skipUrlSync": false,
            "type": "textbox"
          },
          {
            "current": {
              "selected": true,
              "text": "success",
              "value": "success"
            },
            "hide": 0,
            "label": "交付结果",
            "name": "deliveryresult",
            "options": [
              {
                "selected": true,
                "text": "success",
                "value": "success"
              }
            ],
            "query": "success",
            "skipUrlSync": false,
            "type": "textbox"
          },
          {
            "current": {
              "selected": false,
              "text": "1h",
              "value": "1h"
            },
            "hide": 0,
            "includeAll": false,
            "label": "时间间隔",
            "multi": false,
            "name": "timestep",
            "options": [
              {
                "selected": true,
                "text": "1h",
                "value": "1h"
              },
              {
                "selected": false,
                "text": "10m",
                "value": "10m"
              },
              {
                "selected": false,
                "text": "1d",
                "value": "1d"
              }
            ],
            "query": "1h,10m,1d",
            "queryValue": "",
            "skipUrlSync": false,
            "type": "custom"
          }
        ]
      },
      "time": {
        "from": "now-6h",
        "to": "now"
      },
      "timepicker": {},
      "timezone": "",
      "title": "Lunettes DebugSLO",
      "uid": "lunettes-debugslo",
      "version": 3,
      "weekStart": ""
    }
  podyaml.json: |
    {
      "annotations": {
        "list": [
          {
            "builtIn": 1,
            "datasource": {
              "type": "grafana",
              "uid": "-- Grafana --"
            },
            "enable": true,
            "hide": true,
            "iconColor": "rgba(0, 211, 255, 1)",
            "name": "Annotations & Alerts",
            "type": "dashboard"
          }
        ]
      },
      "editable": true,
      "fiscalYearStartMonth": 0,
      "graphTooltip": 0,
      "id": 3,
      "links": [],
      "liveNow": false,
      "panels": [
        {
          "datasource": {
            "type": "yesoreyeram-infinity-datasource",
            "uid": "c60b6674-0bb4-4104-ad02-fd5855c9dada"
          },
          "gridPos": {
            "h": 22,
            "w": 24,
            "x": 0,
            "y": 0
          },
          "id": 1,
          "options": {
            "displayModel": "json",
            "seriesCountSize": "sm",
            "showSeriesCount": false,
            "text": "Default value of text input option",
            "theme": "idea"
          },
          "targets": [
            {
              "columns": [],
              "datasource": {
                "type": "yesoreyeram-infinity-datasource",
                "uid": "c60b6674-0bb4-4104-ad02-fd5855c9dada"
              },
              "filters": [],
              "format": "table",
              "global_query_id": "",
              "refId": "A",
              "root_selector": "",
              "source": "url",
              "type": "json",
              "url": "http://grafanadi.lunettes.svc.cluster.local:8080/showyamls?resource=pod&uid=$uid",
              "url_options": {
                "data": "",
                "method": "GET"
              }
            }
          ],
          "title": "PodYaml",
          "type": "antgroup-yaml-panel"
        }
      ],
      "refresh": "",
      "schemaVersion": 39,
      "tags": [],
      "templating": {
        "list": [
          {
            "current": {
              "selected": false,
              "text": "",
              "value": ""
            },
            "hide": 0,
            "label": "uid",
            "name": "uid",
            "options": [
              {
                "selected": true,
                "text": "",
                "value": ""
              }
            ],
            "query": "",
            "skipUrlSync": false,
            "type": "textbox"
          }
        ]
      },
      "time": {
        "from": "now-6h",
        "to": "now"
      },
      "timepicker": {},
      "timezone": "browser",
      "title": "podyaml",
      "uid": "podyamllinks",
      "version": 3,
      "weekStart": ""
    }
  nodeyaml.json: |
    {
      "annotations": {
        "list": [
          {
            "builtIn": 1,
            "datasource": {
              "type": "grafana",
              "uid": "-- Grafana --"
            },
            "enable": true,
            "hide": true,
            "iconColor": "rgba(0, 211, 255, 1)",
            "name": "Annotations & Alerts",
            "type": "dashboard"
          }
        ]
      },
      "editable": true,
      "fiscalYearStartMonth": 0,
      "graphTooltip": 0,
      "id": 4,
      "links": [],
      "liveNow": false,
      "panels": [
        {
          "datasource": {
            "type": "yesoreyeram-infinity-datasource",
            "uid": "c60b6674-0bb4-4104-ad02-fd5855c9dada"
          },
          "gridPos": {
            "h": 22,
            "w": 24,
            "x": 0,
            "y": 0
          },
          "id": 1,
          "options": {
            "displayModel": "json",
            "seriesCountSize": "sm",
            "showSeriesCount": false,
            "text": "Default value of text input option",
            "theme": "idea"
          },
          "targets": [
            {
              "columns": [],
              "datasource": {
                "type": "yesoreyeram-infinity-datasource",
                "uid": "c60b6674-0bb4-4104-ad02-fd5855c9dada"
              },
              "filters": [],
              "format": "table",
              "global_query_id": "",
              "refId": "A",
              "root_selector": "",
              "source": "url",
              "type": "json",
              "url": "http://grafanadi.lunettes.svc.cluster.local:8080/showyamls?resource=node&name=$nodeName",
              "url_options": {
                "data": "",
                "method": "GET"
              }
            }
          ],
          "title": "NodeYaml",
          "type": "antgroup-yaml-panel"
        }
      ],
      "refresh": "",
      "schemaVersion": 39,
      "tags": [],
      "templating": {
        "list": [
          {
            "current": {
              "selected": false,
              "text": "",
              "value": ""
            },
            "hide": 0,
            "label": "nodeName",
            "name": "nodeName",
            "options": [
              {
                "selected": true,
                "text": "",
                "value": ""
              }
            ],
            "query": "i-f8zh6micauwfcdncl6ty",
            "skipUrlSync": false,
            "type": "textbox"
          }
        ]
      },
      "time": {
        "from": "now-6h",
        "to": "now"
      },
      "timepicker": {},
      "timezone": "browser",
      "title": "nodeyaml",
      "uid": "nodeyamllinks",
      "version": 3,
      "weekStart": ""
    }
  rawdata.json: |
    {
      "annotations": {
        "list": [
          {
            "builtIn": 1,
            "datasource": {
              "type": "grafana",
              "uid": "-- Grafana --"
            },
            "enable": true,
            "hide": true,
            "iconColor": "rgba(0, 211, 255, 1)",
            "name": "Annotations & Alerts",
            "type": "dashboard"
          }
        ]
      },
      "editable": true,
      "fiscalYearStartMonth": 0,
      "graphTooltip": 0,
      "id": 5,
      "links": [],
      "liveNow": false,
      "panels": [
        {
          "datasource": {
            "type": "yesoreyeram-infinity-datasource",
            "uid": "c60b6674-0bb4-4104-ad02-fd5855c9dada"
          },
          "gridPos": {
            "h": 22,
            "w": 24,
            "x": 0,
            "y": 0
          },
          "id": 1,
          "options": {
            "displayModel": "json",
            "seriesCountSize": "sm",
            "showSeriesCount": false,
            "text": "Default value of text input option",
            "theme": "idea"
          },
          "targets": [
            {
              "columns": [],
              "datasource": {
                "type": "yesoreyeram-infinity-datasource",
                "uid": "c60b6674-0bb4-4104-ad02-fd5855c9dada"
              },
              "filters": [],
              "format": "table",
              "global_query_id": "",
              "refId": "A",
              "root_selector": "",
              "source": "url",
              "type": "json",
              "url": "http://grafanadi.lunettes.svc.cluster.local:8080/rawdata?plfid=$plfid",
              "url_options": {
                "data": "",
                "method": "GET"
              }
            }
          ],
          "title": "审计信息",
          "type": "antgroup-yaml-panel"
        }
      ],
      "refresh": "",
      "schemaVersion": 39,
      "tags": [],
      "templating": {
        "list": [
          {
            "current": {},
            "hide": 0,
            "label": "plfid",
            "name": "plfid",
            "options": [],
            "query": "",
            "skipUrlSync": false,
            "type": "textbox"
          }
        ]
      },
      "time": {
        "from": "now-6h",
        "to": "now"
      },
      "timepicker": {},
      "timezone": "browser",
      "title": "rawdata",
      "uid": "rawdatalinks",
      "version": 3,
      "weekStart": ""
    }
  tkp.json: |
    {
      "annotations": {
        "list": [
          {
            "builtIn": 1,
            "datasource": {
              "type": "grafana",
              "uid": "-- Grafana --"
            },
            "enable": true,
            "hide": true,
            "iconColor": "rgba(0, 211, 255, 1)",
            "name": "Annotations & Alerts",
            "type": "dashboard"
          }
        ]
      },
      "editable": true,
      "fiscalYearStartMonth": 0,
      "graphTooltip": 0,
      "id": 38,
      "links": [],
      "liveNow": false,
      "panels": [
        {
          "datasource": {
            "type": "testdata",
            "uid": "e3b3da0b-5fcf-4c2a-8ea8-e3a5bc54fa05"
          },
          "gridPos": {
            "h": 12,
            "w": 12,
            "x": 0,
            "y": 0
          },
          "id": 1,
          "options": {
            "debugPodUrl": "d/lunettes-debugpod/lunettes-debugpod?orgId=1",
            "searchUrl": "http://admin:admin@lunettes-dashboard.aidc-wlcb.alipay.net:30180/api/datasources/proxy/2/apis/v1/querypodlist?searchkey=$podinfo&searchvalue=$podinfovalue",
            "seriesCountSize": "sm",
            "showSeriesCount": false,
            "text": "Default value of text input option",
            "title": "Pod查询",
            "tkpHosting": "http://admin:admin@lunettes-dashboard.aidc-wlcb.alipay.net:30180/api/datasources/proxy/2/apis/v1/tkp"
          },
          "targets": [
            {
              "datasource": {
                "type": "testdata",
                "uid": "e3b3da0b-5fcf-4c2a-8ea8-e3a5bc54fa05"
              },
              "refId": "A",
              "scenarioId": "random_walk",
              "seriesCount": 1
            }
          ],
          "type": "antgroup-tkptable-panel"
        },
        {
          "datasource": {},
          "gridPos": {
            "h": 19,
            "w": 12,
            "x": 12,
            "y": 0
          },
          "id": 5,
          "options": {
            "baidu": {
              "callback": "bmapReady",
              "key": ""
            },
            "editor": {
              "format": "auto"
            },
            "editorMode": "code",
            "gaode": {
              "key": "",
              "plugin": "AMap.Scale,AMap.ToolBar"
            },
            "getOption": "// 获取当前dashboard中声明的变量\nconst cluster = context.grafana.replaceVariables('$cluster');\nconst namespace = context.grafana.replaceVariables('$namespace');\nconst podName = context.grafana.replaceVariables('$podinfovalue');\nconst workloadName = context.grafana.replaceVariables('$workloadName');\nconst tkpName = context.grafana.replaceVariables('$tkpName');\nconst siteName = context.grafana.replaceVariables('$site');\nconst statusError = 'Pending';\nconst statusReady = 'Running';\nconst statusContainerCreating = 'ContainerCreating';\nif (!tkpName) {\n  console.log('cluster:', cluster, 'namespace:', namespace, 'tkpName:', tkpName, 'siteName:', siteName)\n  return\n}\nfunction getCategory(value) {\n  switch (value) {\n    case statusError:\n      return 3;\n    case statusReady:\n      return 1;\n    case statusContainerCreating:\n      return 2;\n    default: return 3;\n  }\n}\n\n\n//workload图标\nconst workloadIcon = 'path://M808 789.995l-21.952-32.896 65.813-38.4V323.904L654.443 208.747l19.2-32.918L890.24 301.973v438.699L808 790.016zM166.379 562.432H128v-257.75L517.333 85.334l87.766 49.344-19.2 35.648-68.544-41.13-350.976 197.418v235.819zM509.12 960L128 743.381V636.46h38.4v84.992L509.12 916.14 731.2 789.995l19.2 32.917L509.141 960z m-24.683-619.67l-84.992-49.365v-30.144l112.427-65.813 109.653 65.813v30.144l-82.24 49.366-2.752 30.165-24.661-16.448-27.435 16.427V340.33z m172.758 197.42v-98.71l-85.014-49.365V359.53l109.675-63.062 112.427 63.062v128.853l-112.427 63.083-24.661-13.718z m-257.75 246.762V658.389l24.683-16.448 84.992 49.344 87.744-49.344 24.683 13.718v128.853L509.12 850.325l-109.653-65.813z m257.75-49.344v-98.71l-27.435-16.447 27.435-13.718v-30.165l24.661 16.448 85.013-49.344 27.414 13.717v128.854l-112.427 63.061-24.661-13.696z m-257.75-148.053V458.24l112.427-63.061 109.653 63.061v128.853L509.12 650.155l-109.653-63.062z m-175.488 98.688l2.752-128.854 24.683-13.717 84.992 49.344 27.413-16.427v30.144l27.435 16.448-27.435 13.718v98.709l-27.413 13.696-112.427-63.061z m0-197.419l2.752-128.853 112.427-63.062 109.653 63.062v30.144l-84.992 49.365v95.957l-27.413 16.47-112.427-63.083z'\n//tkp图标\nconst tkpIcon = 'path://M725.312 74.688a74.688 74.688 0 1 1-3.52 149.248l-66.816 106.688h134.4c38.4 0 70.144 29.184 74.24 66.56l0.384 8.128V480h74.688a32 32 0 0 1 31.488 26.24l0.512 5.76v213.312a32 32 0 0 1-26.24 31.488l-5.76 0.512h-74.752l0.064 117.376c0 38.464-29.12 70.144-66.56 74.24l-8.128 0.384H234.688A74.688 74.688 0 0 1 160 874.688v-117.376H85.248a32 32 0 0 1-31.488-26.24l-0.512-5.76V512a32 32 0 0 1 26.24-31.488l5.76-0.512H160L160 405.312c0-38.464 29.12-70.144 66.56-74.24l8.128-0.384 134.208-0.064-66.816-106.88-3.392 0.256a74.688 74.688 0 0 1-74.24-66.56L224 149.312a74.688 74.688 0 1 1 134.784 44.288l85.504 136.96h135.296l85.632-136.96a74.24 74.24 0 0 1-14.08-36.16l-0.448-8.128c0-41.216 33.408-74.624 74.624-74.624z m64 320H234.688a10.688 10.688 0 0 0-10.688 10.624v469.376c0 5.888 4.8 10.624 10.688 10.624h554.624a10.688 10.688 0 0 0 10.688-10.624V405.312a10.688 10.688 0 0 0-10.688-10.624z m-192 85.312a117.312 117.312 0 1 1 0 234.688H426.688a117.312 117.312 0 0 1 0-234.688z m266.624 213.312h42.688V544h-42.688v149.312zM160 544h-42.624v149.312h42.624V544z m437.376 0H426.688a53.312 53.312 0 1 0 0 106.688h170.624a53.312 53.312 0 0 0 0-106.688'\n\n//计算对应节点的位置\nfunction calculatePosition(count) {\n  const result = []\n  let firstNum = 0\n  if (count % 2 === 0) {\n    firstNum = Math.trunc(count / 2) - 0.5\n  } else {\n    firstNum = Math.trunc(count / 2)\n  }\n  for (let index = 0; index < count; index++) {\n    result.push(firstNum)\n    firstNum -= 1\n  }\n  return result\n}\n\n//定义图例\nconst categories = [\n  {\n    \"name\": \"Workload\"\n  },\n  {\n    \"name\": \"Success\"\n  },\n  {\n    \"name\": \"Creating\"\n  },\n  {\n    \"name\": \"Create Error\"\n  },\n  {\n    \"name\": \"TKP\"\n  },\n  {\n    \"name\": \"Ready Pods\"\n  },\n]\n\n// 定义图例颜色，与图例的顺序一一对应\nconst color = ['#398ee3', '#82ba65', '#ebd375', '#e84c43', '#43b4e8', '#99a1a8']\n\n// 画面上的节点数据\nlet data = []\n// 画面上的连线数据\nlet links = []\n// 接口返回的数据\nlet queryData = {};\n\nif (context.panel.data.series[0]?.meta.custom.data) {\n  queryData = context.panel.data.series[0].meta.custom.data\n} else {\n  return;\n}\n\n// 获取pod节点\n\nif (!(queryData.podList?.length > 0 && queryData.workloadList?.length > 0)) {\n  return\n}\nconst podList = Array.from(new Set(queryData.podList.map(JSON.stringify))).map(JSON.parse);\nlet displayedPods = podList.filter(item => item.detail.status !== statusReady || item.refIds.length > 1)\n\n// 获取workload节点\nlet workload = queryData.workloadList.filter(item => item.name === workloadName)[0]\nif (!workload) {\n  context.grafana.notifyError(['Workload Not Find', '未找到匹配的workload。'])\n  return\n}\nlet tkp = queryData.workloadList.filter(item => item.name === tkpName)[0]\nlet tkpList = queryData.workloadList.filter(item => item.kind === 'VersionedTurnkeyPod' && item.name !== tkpName);\nif (workload) {\n  data.push({\n    x: -200,\n    y: 0,\n    id: workload?.uid,\n    name: workload.name,\n    info: workload,\n    symbolSize: 50,\n    symbol: workloadIcon,\n    category: 0\n  })\n}\n\nlet displayedPodCount = displayedPods.length\nlet displayedPodPosition = calculatePosition(displayedPodCount)\nconsole.log(displayedPods)\ndisplayedPods.map((item, index) => {\n  let belongTkp = tkpList.filter(tkpInfo => item.refIds.includes(tkpInfo.uid))\n  if (belongTkp.length > 0) {\n    data.push({\n      x: 400 * displayedPodPosition[index],\n      y: 2000,\n      id: belongTkp[0].uid,\n      name: `Vtkp(${belongTkp[0].name.slice(-5)})`,\n      symbolSize: 20,\n      symbol: tkpIcon,\n      info: belongTkp[0],\n      category: 5,\n      label: { show: true, fontSize: 8, position: 'bottom' },\n\n    })\n    links.push({\n      target: item.detail.namespace + item.detail.name,\n      source: belongTkp[0].uid,\n      lineStyle: {\n        width: 2,\n        type: 'dashed' // 设置虚线类型\n      }\n    })\n  }\n  data.push({\n    x: 400 * displayedPodPosition[index],\n    y: 1600,\n    id: item.detail.namespace + item.detail.name,\n    name: item.detail.name === podName ? `当前托管的pod(${item.detail.name.slice(-5)})` : `Pod(${item.detail.name.slice(-5)})`,\n    symbolSize: 20,\n    info: item,\n    refIds: item.refIds,\n    category: getCategory(item.detail.status),\n    label: {\n      show: true,\n      formatter: function (params) {\n        console.log(params)\n        return params.name + '\\n' + params.data.info?.detail?.status\n      },\n      position: 'top'\n    },\n    itemStyle: item.detail.name === podName ? {\n      normal: {\n        color: 'white',\n        borderColor: item.detail.status === statusReady ? '#82ba65' : '#e84c43',\n        borderWidth: 2,\n        borderType: 'dashed' // 设置边框为虚线\n      }\n    } : {}\n  })\n  item.refIds.map(refId => {\n    links.push({\n      source: refId,\n      target: item.detail.namespace + item.detail.name,\n      lineStyle: item.detail.name === podName ? {\n        width: 2,\n        type: 'dashed' // 设置虚线类型\n      } : {}\n    })\n  })\n})\n\n\nlet readyPodPosition = calculatePosition(displayedPodCount)\nconst readyPods = podList.filter(pod => !displayedPods.includes(pod))\nif (readyPods.length > 0) {\n  data.push({\n    x: -500 + 500 * readyPodPosition[readyPodPosition.length - 1],\n    y: 1600,\n    id: 'ReadyPods',\n    name: `已经Ready的Pod: ${readyPods.length}个`,\n    symbolSize: 40,\n    value: '',\n    category: 5,\n    label: { show: true, position: 'bottom' },\n    tooltip: {\n      formatter: function (params, elOne, elTwo) {\n        var htmlText\n        htmlText = `\n      <div class='custom-tooltip-style'>已成功创建的pod</div>\n      <div>workload共计${podList.length}个pod</br>\n      <div>TKP${tkpName}托管成功1个pod</br>\n      `\n        // <span style=\"color: red\">出错${errorPods.length}个</br>\n        // </span><span style=\"color: green\">正常${readyPods.length}个</span></div>\n        return htmlText\n      }\n    }\n  })\n  if (workload) {\n    links.push({\n      source: workload.uid,\n      target: 'ReadyPods'\n    })\n  }\n}\n\nif (tkp) {\n  let tkpPosition = calculatePosition(displayedPods.length + 1)\n  data.push({\n    x: 400 + 2 * tkpPosition[0] * 200,\n    y: 0,\n    id: tkp.uid,\n    name: tkp.name,\n    symbolSize: 50,\n    symbol: tkpIcon,\n    info: tkp,\n    category: 4,\n    label: { show: true }\n  })\n}\nif (workload && tkp) {\n  const selectNode = data.filter(node => node.refIds?.includes(workload.uid) && node.refIds?.includes(tkp.uid))\n  if (selectNode?.length > 0) {\n    selectNode[0].itemStyle.normal = normal = {\n      color: '#82ba65',\n      borderColor: '#0078f8',\n      borderWidth: 4,\n      borderType: 'dashed' // 设置边框为虚线\n    }\n    selectNode[0].symbolSize = 50\n  }\n}\n\nconsole.log(data)\n\nreturn {\n  tooltip: {\n    formatter: (params) => {\n      if (params.dataType === 'node') {\n        const tooltipValue = params.data.info?.detail ? params.data.info.detail : params.data.info\n        let result = '<table><tbody>'\n        Object.keys(tooltipValue).map(key => {\n          result += `<tr><td>${key}</td><td>${tooltipValue[key]}</td></tr>`\n        })\n\n        result += '</table></tbody>'\n        return result;\n      } else {\n\n      }\n    }\n  },\n  color: color,\n  legend: [\n    {\n      // selectedMode: 'single',\n      data: categories.map(function (a) {\n        return a.name;\n      })\n    }\n  ],\n  animationDuration: 1000,\n  animationEasingUpdate: 'quinticInOut',\n  series: [\n    {\n      edgeSymbol: ['', 'arrow'],\n      type: 'graph',\n      layout: 'none',\n      data: data,\n      links: links,\n      categories: categories,\n      roam: true,\n      label: {\n        position: 'right',\n        show: true,\n        formatter: '{b}'\n      },\n      lineStyle: {\n        width: 2\n      },\n      // emphasis: {\n      //   focus: 'adjacency',\n      //   lineStyle: {\n      //     width: 3\n      //   }\n      // }\n    },\n  ]\n};",
            "google": {
              "callback": "gmapReady",
              "key": ""
            },
            "map": "none",
            "renderer": "canvas",
            "themeEditor": {
              "config": "",
              "name": "default"
            },
            "visualEditor": {
              "code": "const graph = {\n  \"nodes\": [\n    {\n      \"id\": \"0\",\n      \"name\": \"Workload A\",\n      \"symbolSize\": 60,\n      \"x\": 100,\n      \"y\": 100,\n      \"value\": 28.685715,\n      \"category\": 0\n    },\n    {\n      \"id\": \"1\",\n      \"name\": \"Pod A\",\n      \"symbolSize\": 30,\n      \"x\": 0,\n      \"y\": 200,\n      \"value\": 28.685715,\n      \"category\": 1\n    },\n    {\n      \"id\": \"2\",\n      \"name\": \"Pod B\",\n      \"symbolSize\": 30,\n      \"x\": 100,\n      \"y\": 200,\n      \"value\": 30,\n      \"category\": 1\n    },\n    {\n      \"id\": \"3\",\n      \"name\": \"Pod C\",\n      \"symbolSize\": 30,\n      \"x\": 200,\n      \"y\": 200,\n      \"value\": 28.685715,\n      \"category\": 2\n    },\n    {\n      \"id\": \"4\",\n      \"name\": \"Pod D\",\n      \"symbolSize\": 30,\n      \"x\": 200,\n      \"y\": 100,\n      \"value\": 28.685715,\n      \"category\": 0\n    },\n    {\n      \"id\": \"5\",\n      \"name\": \"VTKP\",\n      \"symbolSize\": 60,\n      \"x\": 200,\n      \"y\": 100,\n      \"value\": 28.685715,\n      \"category\": 4\n    },\n  ],\n  \"links\": [\n    {\n      source: '0',\n      target: '1'\n    },\n    {\n      source: '0',\n      target: '2'\n    },\n    {\n      source: '0',\n      target: '3'\n    },\n    {\n      source: '5',\n      target: '3'\n    }\n\n  ],\n  \"categories\": [\n    {\n      \"name\": \"Workload\"\n    },\n    {\n      \"name\": \"Success\"\n    },\n    {\n      \"name\": \"Creating\"\n    },\n    {\n      \"name\": \"Create Error\"\n    },\n    {\n      \"name\": \"TKP\"\n    },\n  ]\n}\n\nreturn {\n  tooltip: {},\n  legend: [\n    {\n      data: graph.categories.map(function (a) {\n        return a.name;\n      })\n    }\n  ],\n  series: [\n    {\n      name: 'Les Miserables',\n      type: 'graph',\n      layout: 'none',\n      data: graph.nodes,\n      links: graph.links,\n      categories: graph.categories,\n      roam: true,\n      label: {\n        show: true,\n        position: 'right',\n        formatter: '{b}'\n      },\n      labelLayout: {\n        hideOverlap: true\n      },\n      scaleLimit: {\n        min: 0.4,\n        max: 2\n      },\n      lineStyle: {\n        color: 'source',\n      }\n    }\n  ]\n};",
              "dataset": [],
              "series": []
            }
          },
          "pluginVersion": "6.2.0",
          "targets": [
            {
              "columns": [],
              "datasource": {
                "type": "yesoreyeram-infinity-datasource",
                "uid": "c60b6674-0bb4-4104-ad02-fd5855c9dada"
              },
              "filters": [],
              "format": "table",
              "global_query_id": "",
              "hide": false,
              "refId": "A",
              "root_selector": "",
              "source": "url",
              "type": "json",
              "url": "http://grafanadi.lunettes.svc.cluster.local:8080/apis/v1/tkp_detail?sitName=$site&cluster=$cluster&vtkp_namespace=$namespace&vtkp_name=$tkpName",
              "url_options": {
                "data": "",
                "method": "GET"
              }
            }
          ],
          "title": "托管实时动态",
          "type": "volkovlabs-echarts-panel"
        },
        {
          "datasource": {},
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "align": "auto",
                "cellOptions": {
                  "type": "auto"
                },
                "inspect": false,
                "minWidth": 80
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "status"
                },
                "properties": [
                  {
                    "id": "custom.cellOptions",
                    "value": {
                      "mode": "gradient",
                      "type": "color-background"
                    }
                  },
                  {
                    "id": "mappings",
                    "value": [
                      {
                        "options": {
                          "ContainerCreating": {
                            "color": "light-yellow",
                            "index": 3
                          },
                          "Pending": {
                            "color": "red",
                            "index": 0
                          },
                          "Running": {
                            "color": "green",
                            "index": 1
                          },
                          "Terminating": {
                            "color": "light-red",
                            "index": 2
                          }
                        },
                        "type": "value"
                      }
                    ]
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "name"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 300
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "操作"
                },
                "properties": [
                  {
                    "id": "mappings",
                    "value": [
                      {
                        "options": {
                          "0": {
                            "index": 0,
                            "text": "诊断"
                          }
                        },
                        "type": "value"
                      }
                    ]
                  },
                  {
                    "id": "links",
                    "value": [
                      {
                        "targetBlank": true,
                        "title": "",
                        "url": "d/lunettes-debugpod/lunettes-debugpod?orgId=1&var-podinfo=name&var-podinfovalue=${__data.fields.name}"
                      }
                    ]
                  },
                  {
                    "id": "custom.width",
                    "value": 60
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "node"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 190
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 12,
            "w": 12,
            "x": 0,
            "y": 12
          },
          "hideTimeOverride": true,
          "id": 4,
          "interval": "3s",
          "maxDataPoints": 1000,
          "options": {
            "cellHeight": "sm",
            "footer": {
              "countRows": false,
              "fields": "",
              "reducer": [
                "sum"
              ],
              "show": false
            },
            "showHeader": true,
            "sortBy": [
              {
                "desc": false,
                "displayName": "age"
              }
            ]
          },
          "pluginVersion": "10.1.5",
          "targets": [
            {
              "columns": [],
              "datasource": {
                "type": "yesoreyeram-infinity-datasource",
                "uid": "c60b6674-0bb4-4104-ad02-fd5855c9dada"
              },
              "filters": [],
              "format": "table",
              "global_query_id": "",
              "refId": "A",
              "root_selector": "",
              "source": "url",
              "type": "json",
              "url": "http://grafanadi.lunettes.svc.cluster.local:8080/apis/v1/tkp_detail?sitName=$site&cluster=$cluster&vtkp_namespace=$namespace&vtkp_name=$tkpName",
              "url_options": {
                "data": "",
                "method": "GET"
              }
            }
          ],
          "timeFrom": "3s",
          "title": "托管Pod列表",
          "transformations": [
            {
              "id": "extractFields",
              "options": {
                "source": "detail"
              }
            },
            {
              "id": "calculateField",
              "options": {
                "alias": "操作",
                "mode": "reduceRow",
                "reduce": {
                  "reducer": "sum"
                }
              }
            },
            {
              "id": "organize",
              "options": {
                "excludeByName": {
                  "code": false,
                  "data": false,
                  "detail": true,
                  "message": false,
                  "ownerRefs": true,
                  "refIds": true,
                  "status": false,
                  "操作": false
                },
                "includeByName": {},
                "indexByName": {
                  "age": 4,
                  "detail": 2,
                  "ip": 5,
                  "name": 1,
                  "namespace": 6,
                  "node": 7,
                  "ownerRefs": 8,
                  "ready": 9,
                  "refIds": 3,
                  "restarts": 10,
                  "status": 11,
                  "操作": 0
                },
                "renameByName": {}
              }
            }
          ],
          "type": "table"
        },
        {
          "datasource": {
            "type": "yesoreyeram-infinity-datasource",
            "uid": "c60b6674-0bb4-4104-ad02-fd5855c9dada"
          },
          "gridPos": {
            "h": 5,
            "w": 12,
            "x": 12,
            "y": 19
          },
          "id": 8,
          "options": {
            "baidu": {
              "callback": "bmapReady",
              "key": ""
            },
            "editor": {
              "format": "auto"
            },
            "editorMode": "code",
            "gaode": {
              "key": "",
              "plugin": "AMap.Scale,AMap.ToolBar"
            },
            "getOption": "function getstatusColor(status) {\n  switch (status) {\n    case 'running': return '#1677ff';\n    case 'success': return '#c4e3fd';\n    case 'failed': return 'red';\n    default: return '#f0f0f0';\n  }\n}\nconst links = [\n  {\n    source: 'start_node_id',\n    target: 'single_retry_id'\n  },\n  {\n    source: 'single_retry_id',\n    target: 'hedging_retry_id'\n  },\n  {\n    source: 'hedging_retry_id',\n    target: 'end_retry_id'\n  }\n];\nconst data = [\n  {\n    name: '开始',\n    id: 'start_node_id',\n    x: 300,\n    y: 300,\n    itemStyle: {\n      color: '#f0f0f0'\n    },\n  },\n  {\n    name: '单例阶段',\n    id: 'single_retry_id',\n    x: 400,\n    y: 300,\n    itemStyle: {\n      color: '#f0f0f0'\n    }\n  },\n  {\n    name: '超发阶段',\n    id: 'hedging_retry_id',\n    x: 500,\n    y: 300,\n    itemStyle: {\n      color: '#f0f0f0'\n    }\n  },\n  {\n    name: '结束',\n    id: 'end_retry_id',\n    x: 600,\n    y: 300,\n    itemStyle: {\n      color: '#f0f0f0'\n    }\n  }\n]\nif (context.panel.data.series[0]?.meta.custom.data && context.panel.data.series[0].meta.custom.data.length > 0) {\n  const panelData = context.panel.data.series[0].meta.custom.data;\n  panelData.map((item, index) => {\n    const setNode = data.filter(node => node.id === item.name)[0];\n    if (setNode.id === 'end_retry_id' && item.status === 'success') {\n      setNode.itemStyle.color = '#1677ff'\n    } else { \n      setNode.itemStyle.color = getstatusColor(item.status)\n    }\n    \n  })\n  if (panelData[1].status === 'success') {\n    links[0].lineStyle = {\n      opacity: 0.9,\n      width: 2,\n      color: 'source',\n      type: 'solid',\n      curveness: 0\n    }\n  }\n  if (panelData[2].trigger) {\n    if (panelData[2].status === 'success') {\n      links[1].lineStyle = {\n        opacity: 0.9,\n        width: 2,\n        color: 'source',\n        type: 'solid',\n        curveness: 0\n      }\n    }\n    if (panelData[3].status === 'success' || panelData[3].status === 'succeed') {\n      links[2].lineStyle = {\n        opacity: 0.9,\n        width: 2,\n        color: 'source',\n        type: 'solid',\n        curveness: 0\n      }\n    }\n  } else {\n    if (panelData[3].status === 'success' || panelData[3].status === 'succeed') {\n      links.pop();\n      links[links.length - 1].target = 'end_retry_id'\n      links[links.length - 1].lineStyle = {\n        opacity: 0.9,\n        width: 2,\n        color: 'source',\n        type: 'solid',\n        curveness: 0.2\n      }\n    }\n  }\n}\n\nreturn {\n  tooltip: {},\n  animationDurationUpdate: 1500,\n  animationEasingUpdate: 'quinticInOut',\n  series: [\n    {\n      edgeSymbol: ['', 'arrow'],\n      type: 'graph',\n      layout: 'none',\n      symbolSize: 50,\n      roam: true,\n      label: {\n        show: true\n      },\n      data: data,\n      links: links,\n      lineStyle: {\n        opacity: 0.9,\n        width: 2,\n        color: 'source',\n        type: 'dashed', // 设置虚线类型\n        curveness: 0\n      },\n    }\n  ]\n};",
            "google": {
              "callback": "gmapReady",
              "key": ""
            },
            "map": "json",
            "renderer": "svg",
            "themeEditor": {
              "config": "{}",
              "name": "default"
            },
            "visualEditor": {
              "code": "\n// 动态添加CSS\nfunction addAnimationCSS() {\n  const css = `\n  @keyframes spin {\n    0 % { transform: rotate(0deg); }\n      100% {transform: rotate(360deg); }\n    }\n  .node-border {\n    stroke: #000; /* 边框颜色 */\n  stroke-width: 3; /* 边框宽度 */\n  stroke-dasharray: 4; /* 边框虚线样式 */\n  animation: spin 2s linear infinite; /* 转圈动画 */\n    }\n  `;\n  const style = document.createElement('style');\n  style.type = 'text/css';\n  style.appendChild(document.createTextNode(css));\n  document.head.appendChild(style);\n}\n\n// 添加动画到节点\nfunction applyAnimationToNodes() {\n  const nodes = document.querySelectorAll('g.node'); // 选择所有节点，适应实际情况调整选择器\n  nodes.forEach(node => {\n    const circle = node.querySelector('circle'); // 假设节点是圆形的\n    if (circle) {\n      circle.classList.add('node-border'); // 为每个节点添加自定义类\n    }\n  });\n}\n\n// 调用函数以添加动画CSS和应用节点动画\naddAnimationCSS();\n\n// 延迟确保节点渲染完成后应用动画\nsetTimeout(applyAnimationToNodes, 1000); // 根据实际情况调整延迟时间\n\nreturn {\n  tooltip: {},\n  animationDurationUpdate: 1500,\n  animationEasingUpdate: 'quinticInOut',\n  series: [\n    {\n      type: 'graph',\n      layout: 'none',\n      symbolSize: 50,\n      roam: true,\n      label: {\n        show: true\n      },\n      edgeSymbol: ['circle', 'arrow'],\n      edgeSymbolSize: [4, 10],\n      edgeLabel: {\n        fontSize: 20\n      },\n      data: [\n        {\n          name: '开始',\n          x: 300,\n          y: 300\n        },\n        {\n          name: '单例阶段',\n          x: 400,\n          y: 300\n        },\n        {\n          name: '超发阶段',\n          x: 500,\n          y: 300\n        },\n        {\n          name: '结束',\n          x: 600,\n          y: 300\n        }\n      ],\n      // links: [],\n      links: [\n\n        {\n          source: '开始',\n          target: '单例阶段',\n\n        },\n        {\n          source: '单例阶段',\n          target: '超发阶段'\n        },\n        {\n          source: '超发阶段',\n          target: '结束'\n        },\n      ],\n      lineStyle: {\n        opacity: 0.9,\n        width: 2,\n        curveness: 0\n      }\n    }\n  ]\n};",
              "dataset": [],
              "series": []
            }
          },
          "pluginVersion": "6.2.0",
          "targets": [
            {
              "columns": [],
              "datasource": {
                "type": "yesoreyeram-infinity-datasource",
                "uid": "c60b6674-0bb4-4104-ad02-fd5855c9dada"
              },
              "filters": [],
              "format": "table",
              "global_query_id": "",
              "refId": "A",
              "root_selector": "",
              "source": "url",
              "type": "json",
              "url": "http://grafanadi.lunettes.svc.cluster.local:8080/apis/v1/tkp_status?sitName=$site&cluster=$cluster&vtkp_namespace=$namespace&vtkp_name=$tkpName",
              "url_options": {
                "data": "",
                "method": "GET"
              }
            }
          ],
          "title": "当前阶段",
          "type": "volkovlabs-echarts-panel"
        },
        {
          "datasource": {
            "type": "yesoreyeram-infinity-datasource",
            "uid": "c60b6674-0bb4-4104-ad02-fd5855c9dada"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "fillOpacity": 70,
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineWidth": 0,
                "spanNulls": false
              },
              "links": [
                {
                  "targetBlank": true,
                  "title": "Pod诊断",
                  "url": "d/lunettes-debugpod/lunettes-debugpod?orgId=1&var-podinfo=name&var-podinfovalue=${__field.name}"
                }
              ],
              "mappings": [
                {
                  "options": {
                    "Creating": {
                      "color": "#c4d9f8",
                      "index": 0,
                      "text": "创建阶段"
                    },
                    "Deleting": {
                      "color": "#c9c9c9",
                      "index": 2,
                      "text": "删除阶段"
                    },
                    "None": {
                      "color": "#ffffff",
                      "index": 3,
                      "text": "结束"
                    },
                    "Running": {
                      "color": "#73BF69",
                      "index": 1,
                      "text": "运行阶段"
                    }
                  },
                  "type": "value"
                }
              ],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "transparent",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 9,
            "w": 24,
            "x": 0,
            "y": 24
          },
          "id": 7,
          "options": {
            "alignValue": "left",
            "legend": {
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "mergeValues": true,
            "rowHeight": 0.9,
            "showValue": "auto",
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "columns": [],
              "datasource": {
                "type": "yesoreyeram-infinity-datasource",
                "uid": "c60b6674-0bb4-4104-ad02-fd5855c9dada"
              },
              "filters": [],
              "format": "as-is",
              "global_query_id": "",
              "refId": "A",
              "root_selector": "",
              "source": "url",
              "type": "json",
              "url": "http://grafanadi.lunettes.svc.cluster.local:8080/ownerpodmaps?searchkey=name&searchvalue=${tkpName}&debugfrom=workload",
              "url_options": {
                "data": "",
                "method": "GET"
              }
            }
          ],
          "title": "托管记录",
          "type": "state-timeline"
        }
      ],
      "refresh": "5s",
      "schemaVersion": 38,
      "style": "dark",
      "tags": [],
      "templating": {
        "list": [
          {
            "hide": 2,
            "name": "podinfovalue",
            "query": "",
            "skipUrlSync": false,
            "type": "constant"
          },
          {
            "hide": 2,
            "name": "cluster",
            "query": "",
            "skipUrlSync": false,
            "type": "constant"
          },
          {
            "hide": 2,
            "name": "namespace",
            "query": "",
            "skipUrlSync": false,
            "type": "constant"
          },
          {
            "hide": 2,
            "name": "site",
            "query": "",
            "skipUrlSync": false,
            "type": "constant"
          },
          {
            "hide": 2,
            "name": "workloadName",
            "query": "",
            "skipUrlSync": false,
            "type": "constant"
          },
          {
            "hide": 2,
            "name": "tkpName",
            "query": "",
            "skipUrlSync": false,
            "type": "constant"
          },
          {
            "hide": 2,
            "name": "podinfo",
            "query": "",
            "skipUrlSync": false,
            "type": "constant"
          }
        ]
      },
      "time": {
        "from": "now-5m",
        "to": "now"
      },
      "timepicker": {},
      "timezone": "",
      "title": "TKP容器托管服务",
      "uid": "tkp-delivery-service",
      "version": 5,
      "weekStart": ""
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-config
  namespace: {{ .Values.global.namespace }}
data:
  grafana.ini: |
    ##################### Grafana Configuration Example #####################
    #
    # Everything has defaults so you only need to uncomment things you want to
    # change
    # possible values : production, development
    ;app_mode = production
    # instance name, defaults to HOSTNAME environment variable value or hostname if HOSTNAME var is empty
    ;instance_name = ${HOSTNAME}
    # force migration will run migrations that might cause dataloss
    ;force_migration = false
    #################################### Paths ####################################
    [paths]
    # Path to where grafana can store temp files, sessions, and the sqlite3 db (if that is used)
    ;data = /var/lib/grafana
    # Temporary files in `data` directory older than given duration will be removed
    ;temp_data_lifetime = 24h
    # Directory where grafana can store logs
    ;logs = /var/log/grafana
    # Directory where grafana will automatically scan and look for plugins
    ;plugins = /var/lib/grafana/plugins
    # folder that contains provisioning config files that grafana will apply on startup and while running.
    ;provisioning = conf/provisioning
    #################################### Server ####################################
    [server]
    # Protocol (http, https, h2, socket)
    ;protocol = http
    # The ip address to bind to, empty will bind to all interfaces
    ;http_addr =
    # The http port  to use
    ;http_port = 3000
    # The public facing domain name used to access grafana from a browser
    ;domain = localhost
    # Redirect to correct domain if host header does not match domain
    # Prevents DNS rebinding attacks
    ;enforce_domain = false
    # The full public facing url you use in browser, used for redirects and emails
    # If you use reverse proxy and sub path specify full url (with sub path)
    ;root_url = %(protocol)s://%(domain)s:%(http_port)s/
    # Serve Grafana from subpath specified in `root_url` setting. By default it is set to `false` for compatibility reasons.
    ;serve_from_sub_path = false
    # Log web requests
    ;router_logging = false
    # the path relative working path
    ;static_root_path = public
    # enable gzip
    ;enable_gzip = false
    # https certs & key file
    ;cert_file =
    ;cert_key =
    # Unix socket gid
    # Changing the gid of a file without privileges requires that the target group is in the group of the process and that the process is the file owner
    # It is recommended to set the gid as http server user gid
    # Not set when the value is -1
    ;socket_gid =
    # Unix socket mode
    ;socket_mode =
    # Unix socket path
    ;socket =
    # CDN Url
    ;cdn_url =
    # Sets the maximum time using a duration format (5s/5m/5ms) before timing out read of an incoming request and closing idle connections.
    # `0` means there is no timeout for reading the request.
    ;read_timeout = 0
    # This setting enables you to specify additional headers that the server adds to HTTP(S) responses.
    [server.custom_response_headers]
    #exampleHeader1 = exampleValue1
    #exampleHeader2 = exampleValue2
    #################################### GRPC Server #########################
    ;[grpc_server]
    ;network = "tcp"
    ;address = "127.0.0.1:10000"
    ;use_tls = false
    ;cert_file =
    ;key_file =
    #################################### Database ####################################
    [database]
    # You can configure the database connection by specifying type, host, name, user and password
    # as separate properties or as on string using the url properties.
    # Either "mysql", "postgres" or "sqlite3", it's your choice
    ;type = sqlite3
    ;host = 127.0.0.1:3306
    ;name = grafana
    ;user = root
    # If the password contains # or ; you have to wrap it with triple quotes. Ex """#password;"""
    ;password =
    # Use either URL or the previous fields to configure the database
    # Example: mysql://user:secret@host:port/database
    ;url =
    # For "postgres", use either "disable", "require" or "verify-full"
    # For "mysql", use either "true", "false", or "skip-verify".
    ;ssl_mode = disable
    # Database drivers may support different transaction isolation levels.
    # Currently, only "mysql" driver supports isolation levels.
    # If the value is empty - driver's default isolation level is applied.
    # For "mysql" use "READ-UNCOMMITTED", "READ-COMMITTED", "REPEATABLE-READ" or "SERIALIZABLE".
    ;isolation_level =
    ;ca_cert_path =
    ;client_key_path =
    ;client_cert_path =
    ;server_cert_name =
    # For "sqlite3" only, path relative to data_path setting
    ;path = grafana.db
    # Max idle conn setting default is 2
    ;max_idle_conn = 2
    # Max conn setting default is 0 (mean not set)
    ;max_open_conn =
    # Connection Max Lifetime default is 14400 (means 14400 seconds or 4 hours)
    ;conn_max_lifetime = 14400
    # Set to true to log the sql calls and execution times.
    ;log_queries =
    # For "sqlite3" only. cache mode setting used for connecting to the database. (private, shared)
    ;cache_mode = private
    # For "sqlite3" only. Enable/disable Write-Ahead Logging, https://sqlite.org/wal.html. Default is false.
    ;wal = false
    # For "mysql" only if migrationLocking feature toggle is set. How many seconds to wait before failing to lock the database for the migrations, default is 0.
    ;locking_attempt_timeout_sec = 0
    # For "sqlite" only. How many times to retry query in case of database is locked failures. Default is 0 (disabled).
    ;query_retries = 0
    # For "sqlite" only. How many times to retry transaction in case of database is locked failures. Default is 5.
    ;transaction_retries = 5
    # Set to true to add metrics and tracing for database queries. 
    ;instrument_queries = false
    ################################### Data sources #########################
    [datasources]
    # Upper limit of data sources that Grafana will return. This limit is a temporary configuration and it will be deprecated when pagination will be introduced on the list data sources API.
    ;datasource_limit = 5000
    #################################### Cache server #############################
    [remote_cache]
    # Either "redis", "memcached" or "database" default is "database"
    ;type = database
    # cache connectionstring options
    # database: will use Grafana primary database.
    # redis: config like redis server e.g. `addr=127.0.0.1:6379,pool_size=100,db=0,ssl=false`. Only addr is required. ssl may be 'true', 'false', or 'insecure'.
    # memcache: 127.0.0.1:11211
    ;connstr =
    # prefix prepended to all the keys in the remote cache
    ; prefix =
    # This enables encryption of values stored in the remote cache
    ;encryption =
    #################################### Data proxy ###########################
    [dataproxy]
    # This enables data proxy logging, default is false
    ;logging = false
    # How long the data proxy waits to read the headers of the response before timing out, default is 30 seconds.
    # This setting also applies to core backend HTTP data sources where query requests use an HTTP client with timeout set.
    ;timeout = 30
    # How long the data proxy waits to establish a TCP connection before timing out, default is 10 seconds.
    ;dialTimeout = 10
    # How many seconds the data proxy waits before sending a keepalive probe request.
    ;keep_alive_seconds = 30
    # How many seconds the data proxy waits for a successful TLS Handshake before timing out.
    ;tls_handshake_timeout_seconds = 10
    # How many seconds the data proxy will wait for a server's first response headers after
    # fully writing the request headers if the request has an "Expect: 100-continue"
    # header. A value of 0 will result in the body being sent immediately, without
    # waiting for the server to approve.
    ;expect_continue_timeout_seconds = 1
    # Optionally limits the total number of connections per host, including connections in the dialing,
    # active, and idle states. On limit violation, dials will block.
    # A value of zero (0) means no limit.
    ;max_conns_per_host = 0
    # The maximum number of idle connections that Grafana will keep alive.
    ;max_idle_connections = 100
    # How many seconds the data proxy keeps an idle connection open before timing out.
    ;idle_conn_timeout_seconds = 90
    # If enabled and user is not anonymous, data proxy will add X-Grafana-User header with username into the request, default is false.
    ;send_user_header = false
    # Limit the amount of bytes that will be read/accepted from responses of outgoing HTTP requests.
    ;response_limit = 0
    # Limits the number of rows that Grafana will process from SQL data sources.
    ;row_limit = 1000000
    # Sets a custom value for the `User-Agent` header for outgoing data proxy requests. If empty, the default value is `Grafana/<BuildVersion>` (for example `Grafana/9.0.0`).
    ;user_agent =
    #################################### Analytics ####################################
    [analytics]
    # Server reporting, sends usage counters to stats.grafana.org every 24 hours.
    # No ip addresses are being tracked, only simple counters to track
    # running instances, dashboard and error counts. It is very helpful to us.
    # Change this option to false to disable reporting.
    ;reporting_enabled = true
    # The name of the distributor of the Grafana instance. Ex hosted-grafana, grafana-labs
    ;reporting_distributor = grafana-labs
    # Set to false to disable all checks to https://grafana.com
    # for new versions of grafana. The check is used
    # in some UI views to notify that a grafana update exists.
    # This option does not cause any auto updates, nor send any information
    # only a GET request to https://raw.githubusercontent.com/grafana/grafana/main/latest.json to get the latest version.
    ;check_for_updates = true
    # Set to false to disable all checks to https://grafana.com
    # for new versions of plugins. The check is used
    # in some UI views to notify that a plugin update exists.
    # This option does not cause any auto updates, nor send any information
    # only a GET request to https://grafana.com to get the latest versions.
    ;check_for_plugin_updates = true
    # Google Analytics universal tracking code, only enabled if you specify an id here
    ;google_analytics_ua_id =
    # Google Analytics 4 tracking code, only enabled if you specify an id here
    ;google_analytics_4_id =
    # When Google Analytics 4 Enhanced event measurement is enabled, we will try to avoid sending duplicate events and let Google Analytics 4 detect navigation changes, etc.
    ;google_analytics_4_send_manual_page_views = false
    # Google Tag Manager ID, only enabled if you specify an id here
    ;google_tag_manager_id =
    # Rudderstack write key, enabled only if rudderstack_data_plane_url is also set
    ;rudderstack_write_key =
    # Rudderstack data plane url, enabled only if rudderstack_write_key is also set
    ;rudderstack_data_plane_url =
    # Rudderstack SDK url, optional, only valid if rudderstack_write_key and rudderstack_data_plane_url is also set
    ;rudderstack_sdk_url =
    # Rudderstack Config url, optional, used by Rudderstack SDK to fetch source config
    ;rudderstack_config_url =
    # Intercom secret, optional, used to hash user_id before passing to Intercom via Rudderstack
    ;intercom_secret =
    # Controls if the UI contains any links to user feedback forms
    ;feedback_links_enabled = true
    #################################### Security ####################################
    [security]
    # disable creation of admin user on first start of grafana
    ;disable_initial_admin_creation = false
    # default admin user, created on startup
    admin_user = {{ .Values.adminUser }}
    # default admin password, can be changed before first start of grafana,  or in profile settings
    admin_password = {{ .Values.adminPass }}
    # default admin email, created on startup
    ;admin_email = admin@localhost
    # used for signing
    ;secret_key = SW2YcwTIb9zpOOhoPsMm
    # current key provider used for envelope encryption, default to static value specified by secret_key
    ;encryption_provider = secretKey.v1
    # list of configured key providers, space separated (Enterprise only): e.g., awskms.v1 azurekv.v1
    ;available_encryption_providers =
    # disable gravatar profile images
    ;disable_gravatar = false
    # data source proxy whitelist (ip_or_domain:port separated by spaces)
    ;data_source_proxy_whitelist =
    # disable protection against brute force login attempts
    ;disable_brute_force_login_protection = false
    # set to true if you host Grafana behind HTTPS. default is false.
    ;cookie_secure = false
    # set cookie SameSite attribute. defaults to `lax`. can be set to "lax", "strict", "none" and "disabled"
    ;cookie_samesite = lax
    # set to true if you want to allow browsers to render Grafana in a <frame>, <iframe>, <embed> or <object>. default is false.
    ;allow_embedding = false
    # Set to true if you want to enable http strict transport security (HSTS) response header.
    # HSTS tells browsers that the site should only be accessed using HTTPS.
    ;strict_transport_security = false
    # Sets how long a browser should cache HSTS. Only applied if strict_transport_security is enabled.
    ;strict_transport_security_max_age_seconds = 86400
    # Set to true if to enable HSTS preloading option. Only applied if strict_transport_security is enabled.
    ;strict_transport_security_preload = false
    # Set to true if to enable the HSTS includeSubDomains option. Only applied if strict_transport_security is enabled.
    ;strict_transport_security_subdomains = false
    # Set to true to enable the X-Content-Type-Options response header.
    # The X-Content-Type-Options response HTTP header is a marker used by the server to indicate that the MIME types advertised
    # in the Content-Type headers should not be changed and be followed.
    ;x_content_type_options = true
    # Set to true to enable the X-XSS-Protection header, which tells browsers to stop pages from loading
    # when they detect reflected cross-site scripting (XSS) attacks.
    ;x_xss_protection = true
    # Enable adding the Content-Security-Policy header to your requests.
    # CSP allows to control resources the user agent is allowed to load and helps prevent XSS attacks.
    ;content_security_policy = false
    # Set Content Security Policy template used when adding the Content-Security-Policy header to your requests.
    # $NONCE in the template includes a random nonce.
    # $ROOT_PATH is server.root_url without the protocol.
    ;content_security_policy_template = """script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' $NONCE;object-src 'none';font-src 'self';style-src 'self' 'unsafe-inline' blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com ws://$ROOT_PATH wss://$ROOT_PATH;manifest-src 'self';media-src 'none';form-action 'self';"""
    # Enable adding the Content-Security-Policy-Report-Only header to your requests.
    # Allows you to monitor the effects of a policy without enforcing it.
    ;content_security_policy_report_only = false
    # Set Content Security Policy Report Only template used when adding the Content-Security-Policy-Report-Only header to your requests.
    # $NONCE in the template includes a random nonce.
    # $ROOT_PATH is server.root_url without the protocol.
    ;content_security_policy_report_only_template = """script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' $NONCE;object-src 'none';font-src 'self';style-src 'self' 'unsafe-inline' blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com ws://$ROOT_PATH wss://$ROOT_PATH;manifest-src 'self';media-src 'none';form-action 'self';"""
    # Controls if old angular plugins are supported or not. This will be disabled by default in future release
    ;angular_support_enabled = true
    # List of additional allowed URLs to pass by the CSRF check, separated by spaces. Suggested when authentication comes from an IdP.
    ;csrf_trusted_origins = example.com
    # List of allowed headers to be set by the user, separated by spaces. Suggested to use for if authentication lives behind reverse proxies.
    ;csrf_additional_headers =
    # The CSRF check will be executed even if the request has no login cookie.
    ;csrf_always_check = false
    [security.encryption]
    # Defines the time-to-live (TTL) for decrypted data encryption keys stored in memory (cache).
    # Please note that small values may cause performance issues due to a high frequency decryption operations.
    ;data_keys_cache_ttl = 15m
    # Defines the frequency of data encryption keys cache cleanup interval.
    # On every interval, decrypted data encryption keys that reached the TTL are removed from the cache.
    ;data_keys_cache_cleanup_interval = 1m
    #################################### Snapshots ###########################
    [snapshots]
    # set to false to remove snapshot functionality
    ;enabled = true
    # snapshot sharing options
    ;external_enabled = true
    ;external_snapshot_url = https://snapshots.raintank.io
    ;external_snapshot_name = Publish to snapshots.raintank.io
    # Set to true to enable this Grafana instance act as an external snapshot server and allow unauthenticated requests for
    # creating and deleting snapshots.
    ;public_mode = false
    # remove expired snapshot
    ;snapshot_remove_expired = true
    #################################### Dashboards History ##################
    [dashboards]
    # Number dashboard versions to keep (per dashboard). Default: 20, Minimum: 1
    ;versions_to_keep = 20
    # Minimum dashboard refresh interval. When set, this will restrict users to set the refresh interval of a dashboard lower than given interval. Per default this is 5 seconds.
    # The interval string is a possibly signed sequence of decimal numbers, followed by a unit suffix (ms, s, m, h, d), e.g. 30s or 1m.
    ;min_refresh_interval = 5s
    # Path to the default home dashboard. If this value is empty, then Grafana uses StaticRootPath + "dashboards/home.json"
    ;default_home_dashboard_path =
    #################################### Users ###############################
    [users]
    # disable user signup / registration
    ;allow_sign_up = true
    # Allow non admin users to create organizations
    ;allow_org_create = true
    # Set to true to automatically assign new users to the default organization (id 1)
    ;auto_assign_org = true
    # Set this value to automatically add new users to the provided organization (if auto_assign_org above is set to true)
    ;auto_assign_org_id = 1
    # Default role new users will be automatically assigned (if auto_assign_org above is set to true)
    ;auto_assign_org_role = Viewer
    # Require email validation before sign up completes
    ;verify_email_enabled = false
    # Background text for the user field on the login page
    ;login_hint = email or username
    ;password_hint = password
    # Default UI theme ("dark" or "light")
    default_theme = light
    # Default UI language (supported IETF language tag, such as en-US)
    ;default_language = en-US
    # Path to a custom home page. Users are only redirected to this if the default home dashboard is used. It should match a frontend route and contain a leading slash.
    ;home_page =
    # External user management, these options affect the organization users view
    ;external_manage_link_url =
    ;external_manage_link_name =
    ;external_manage_info =
    # Viewers can edit/inspect dashboard settings in the browser. But not save the dashboard.
    ;viewers_can_edit = false
    # Editors can administrate dashboard, folders and teams they create
    ;editors_can_admin = false
    # The duration in time a user invitation remains valid before expiring. This setting should be expressed as a duration. Examples: 6h (hours), 2d (days), 1w (week). Default is 24h (24 hours). The minimum supported duration is 15m (15 minutes).
    ;user_invite_max_lifetime_duration = 24h
    # Enter a comma-separated list of users login to hide them in the Grafana UI. These users are shown to Grafana admins and themselves.
    ; hidden_users =
    [secretscan]
    # Enable secretscan feature
    ;enabled = false
    # Interval to check for token leaks
    ;interval = 5m
    # base URL of the grafana token leak check service
    ;base_url = https://secret-scanning.grafana.net
    # URL to send outgoing webhooks to in case of detection
    ;oncall_url =
    # Whether to revoke the token if a leak is detected or just send a notification
    ;revoke = true
    [service_accounts]
    # Service account maximum expiration date in days.
    # When set, Grafana will not allow the creation of tokens with expiry greater than this setting.
    ; token_expiration_day_limit =
    [auth]
    # Login cookie name
    ;login_cookie_name = grafana_session
    # Disable usage of Grafana build-in login solution.
    ;disable_login = false
    # The maximum lifetime (duration) an authenticated user can be inactive before being required to login at next visit. Default is 7 days (7d). This setting should be expressed as a duration, e.g. 5m (minutes), 6h (hours), 10d (days), 2w (weeks), 1M (month). The lifetime resets at each successful token rotation.
    ;login_maximum_inactive_lifetime_duration =
    # The maximum lifetime (duration) an authenticated user can be logged in since login time before being required to login. Default is 30 days (30d). This setting should be expressed as a duration, e.g. 5m (minutes), 6h (hours), 10d (days), 2w (weeks), 1M (month).
    ;login_maximum_lifetime_duration =
    # How often should auth tokens be rotated for authenticated users when being active. The default is each 10 minutes.
    ;token_rotation_interval_minutes = 10
    # Set to true to disable (hide) the login form, useful if you use OAuth, defaults to false
    ;disable_login_form = false
    # Set to true to disable the sign out link in the side menu. Useful if you use auth.proxy or auth.jwt, defaults to false
    ;disable_signout_menu = false
    # URL to redirect the user to after sign out
    ;signout_redirect_url =
    # Set to true to attempt login with OAuth automatically, skipping the login screen.
    # This setting is ignored if multiple OAuth providers are configured.
    # Deprecated, use auto_login option for specific provider instead.
    ;oauth_auto_login = false
    # OAuth state max age cookie duration in seconds. Defaults to 600 seconds.
    ;oauth_state_cookie_max_age = 600
    # Skip forced assignment of OrgID 1 or 'auto_assign_org_id' for social logins
    # Deprecated, use skip_org_role_sync option for specific provider instead.
    ;oauth_skip_org_role_update_sync = false
    # limit of api_key seconds to live before expiration
    ;api_key_max_seconds_to_live = -1
    # Set to true to enable SigV4 authentication option for HTTP-based datasources.
    ;sigv4_auth_enabled = false
    # Set to true to enable verbose logging of SigV4 request signing
    ;sigv4_verbose_logging = false
    # Set to true to enable Azure authentication option for HTTP-based datasources.
    ;azure_auth_enabled = false
    # Set to skip the organization role from JWT login and use system's role assignment instead.
    ; skip_org_role_sync = false
    # Use email lookup in addition to the unique ID provided by the IdP
    ;oauth_allow_insecure_email_lookup = false
    #################################### Anonymous Auth ######################
    [auth.anonymous]
    # enable anonymous access
    ;enabled = false
    # specify organization name that should be used for unauthenticated users
    ;org_name = Main Org.
    # specify role for unauthenticated users
    ;org_role = Viewer
    # mask the Grafana version number for unauthenticated users
    ;hide_version = false
    #################################### GitHub Auth ##########################
    [auth.github]
    ;name = GitHub
    ;icon = github
    ;enabled = false
    ;allow_sign_up = true
    ;auto_login = false
    ;client_id = some_id
    ;client_secret = some_secret
    ;scopes = user:email,read:org
    ;auth_url = https://github.com/login/oauth/authorize
    ;token_url = https://github.com/login/oauth/access_token
    ;api_url = https://api.github.com/user
    ;allowed_domains =
    ;team_ids =
    ;allowed_organizations =
    ;role_attribute_path =
    ;role_attribute_strict = false
    ;allow_assign_grafana_admin = false
    #################################### GitLab Auth #########################
    [auth.gitlab]
    ;name = GitLab
    ;icon = gitlab
    ;enabled = false
    ;allow_sign_up = true
    ;auto_login = false
    ;client_id = some_id
    ;client_secret = some_secret
    ;scopes = api
    ;auth_url = https://gitlab.com/oauth/authorize
    ;token_url = https://gitlab.com/oauth/token
    ;api_url = https://gitlab.com/api/v4
    ;allowed_domains =
    ;allowed_groups =
    ;role_attribute_path =
    ;role_attribute_strict = false
    ;allow_assign_grafana_admin = false
    ;skip_org_role_sync = false
    #################################### Google Auth ##########################
    [auth.google]
    ;name = Google
    ;icon = google
    ;enabled = false
    ;allow_sign_up = true
    ;auto_login = false
    ;client_id = some_client_id
    ;client_secret = some_client_secret
    ;scopes = https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email
    ;auth_url = https://accounts.google.com/o/oauth2/auth
    ;token_url = https://accounts.google.com/o/oauth2/token
    ;api_url = https://www.googleapis.com/oauth2/v1/userinfo
    ;allowed_domains =
    ;hosted_domain =
    ;skip_org_role_sync = false
    #################################### Grafana.com Auth ####################
    [auth.grafana_com]
    ;name = Grafana.com
    ;icon = grafana
    ;enabled = false
    ;allow_sign_up = true
    ;auto_login = false
    ;client_id = some_id
    ;client_secret = some_secret
    ;scopes = user:email
    ;allowed_organizations =
    ;skip_org_role_sync = false
    #################################### Azure AD OAuth #######################
    [auth.azuread]
    ;name = Microsoft
    ;icon = microsoft
    ;enabled = false
    ;allow_sign_up = true
    ;auto_login = false
    ;client_id = some_client_id
    ;client_secret = some_client_secret
    ;scopes = openid email profile
    ;auth_url = https://login.microsoftonline.com/<tenant-id>/oauth2/v2.0/authorize
    ;token_url = https://login.microsoftonline.com/<tenant-id>/oauth2/v2.0/token
    ;allowed_domains =
    ;allowed_groups =
    ;allowed_organizations =
    ;role_attribute_strict = false
    ;allow_assign_grafana_admin = false
    # prevent synchronizing users organization roles
    ;skip_org_role_sync = false
    #################################### Okta OAuth #######################
    [auth.okta]
    ;name = Okta
    ;enabled = false
    ;allow_sign_up = true
    ;auto_login = false
    ;client_id = some_id
    ;client_secret = some_secret
    ;scopes = openid profile email groups
    ;auth_url = https://<tenant-id>.okta.com/oauth2/v1/authorize
    ;token_url = https://<tenant-id>.okta.com/oauth2/v1/token
    ;api_url = https://<tenant-id>.okta.com/oauth2/v1/userinfo
    ;allowed_domains =
    ;allowed_groups =
    ;role_attribute_path =
    ;role_attribute_strict = false
    ;allow_assign_grafana_admin = false
    ;skip_org_role_sync = false
    #################################### Generic OAuth ##########################
    [auth.generic_oauth]
    ;enabled = false
    ;name = OAuth
    ;allow_sign_up = true
    ;auto_login = false
    ;client_id = some_id
    ;client_secret = some_secret
    ;scopes = user:email,read:org
    ;empty_scopes = false
    ;email_attribute_name = email:primary
    ;email_attribute_path =
    ;login_attribute_path =
    ;name_attribute_path =
    ;id_token_attribute_name =
    ;auth_url = https://foo.bar/login/oauth/authorize
    ;token_url = https://foo.bar/login/oauth/access_token
    ;api_url = https://foo.bar/user
    ;teams_url =
    ;allowed_domains =
    ;team_ids =
    ;allowed_organizations =
    ;role_attribute_path =
    ;role_attribute_strict = false
    ;groups_attribute_path =
    ;team_ids_attribute_path =
    ;tls_skip_verify_insecure = false
    ;tls_client_cert =
    ;tls_client_key =
    ;tls_client_ca =
    ;use_pkce = false
    ;auth_style =
    ;allow_assign_grafana_admin = false
    #################################### Basic Auth ##########################
    [auth.basic]
    ;enabled = true
    #################################### Auth Proxy ##########################
    [auth.proxy]
    ;enabled = false
    ;header_name = X-WEBAUTH-USER
    ;header_property = username
    ;auto_sign_up = true
    ;sync_ttl = 60
    ;whitelist = 192.168.1.1, 192.168.2.1
    ;headers = Email:X-User-Email, Name:X-User-Name
    # Non-ASCII strings in header values are encoded using quoted-printable encoding
    ;headers_encoded = false
    # Read the auth proxy docs for details on what the setting below enables
    ;enable_login_token = false
    #################################### Auth JWT ##########################
    [auth.jwt]
    ;enabled = true
    ;header_name = X-JWT-Assertion
    ;email_claim = sub
    ;username_claim = sub
    ;jwk_set_url = https://foo.bar/.well-known/jwks.json
    ;jwk_set_file = /path/to/jwks.json
    ;cache_ttl = 60m
    ;expect_claims = {"aud": ["foo", "bar"]}
    ;key_file = /path/to/key/file
    ;role_attribute_path =
    ;role_attribute_strict = false
    ;auto_sign_up = false
    ;url_login = false
    ;allow_assign_grafana_admin = false
    #################################### Auth LDAP ##########################
    [auth.ldap]
    ;enabled = false
    ;config_file = /etc/grafana/ldap.toml
    ;allow_sign_up = true
    # prevent synchronizing ldap users organization roles
    ;skip_org_role_sync = false
    # LDAP background sync (Enterprise only)
    # At 1 am every day
    ;sync_cron = "0 1 * * *"
    ;active_sync_enabled = true
    #################################### AWS ###########################
    [aws]
    # Enter a comma-separated list of allowed AWS authentication providers.
    # Options are: default (AWS SDK Default), keys (Access && secret key), credentials (Credentials field), ec2_iam_role (EC2 IAM Role)
    ; allowed_auth_providers = default,keys,credentials
    # Allow AWS users to assume a role using temporary security credentials.
    # If true, assume role will be enabled for all AWS authentication providers that are specified in aws_auth_providers
    ; assume_role_enabled = true
    #################################### Azure ###############################
    [azure]
    # Azure cloud environment where Grafana is hosted
    # Possible values are AzureCloud, AzureChinaCloud, AzureUSGovernment and AzureGermanCloud
    # Default value is AzureCloud (i.e. public cloud)
    ;cloud = AzureCloud
    # Specifies whether Grafana hosted in Azure service with Managed Identity configured (e.g. Azure Virtual Machines instance)
    # If enabled, the managed identity can be used for authentication of Grafana in Azure services
    # Disabled by default, needs to be explicitly enabled
    ;managed_identity_enabled = false
    # Client ID to use for user-assigned managed identity
    # Should be set for user-assigned identity and should be empty for system-assigned identity
    ;managed_identity_client_id =
    #################################### Role-based Access Control ###########
    [rbac]
    ;permission_cache = true
    # Reset basic roles permissions on boot
    # Warning left to true, basic roles permissions will be reset on every boot
    #reset_basic_roles = false
    #################################### SMTP / Emailing ##########################
    [smtp]
    ;enabled = false
    ;host = localhost:25
    ;user =
    # If the password contains # or ; you have to wrap it with triple quotes. Ex """#password;"""
    ;password =
    ;cert_file =
    ;key_file =
    ;skip_verify = false
    ;from_address = admin@grafana.localhost
    ;from_name = Grafana
    # EHLO identity in SMTP dialog (defaults to instance_name)
    ;ehlo_identity = dashboard.example.com
    # SMTP startTLS policy (defaults to 'OpportunisticStartTLS')
    ;startTLS_policy = NoStartTLS
    [emails]
    ;welcome_email_on_sign_up = false
    ;templates_pattern = emails/*.html, emails/*.txt
    ;content_types = text/html
    #################################### Logging ##########################
    [log]
    # Either "console", "file", "syslog". Default is console and  file
    # Use space to separate multiple modes, e.g. "console file"
    ;mode = console file
    # Either "debug", "info", "warn", "error", "critical", default is "info"
    ;level = info
    # optional settings to set different levels for specific loggers. Ex filters = sqlstore:debug
    ;filters =
    # For "console" mode only
    [log.console]
    ;level =
    # log line format, valid options are text, console and json
    ;format = console
    # For "file" mode only
    [log.file]
    ;level =
    # log line format, valid options are text, console and json
    ;format = text
    # This enables automated log rotate(switch of following options), default is true
    ;log_rotate = true
    # Max line number of single file, default is 1000000
    ;max_lines = 1000000
    # Max size shift of single file, default is 28 means 1 << 28, 256MB
    ;max_size_shift = 28
    # Segment log daily, default is true
    ;daily_rotate = true
    # Expired days of log file(delete after max days), default is 7
    ;max_days = 7
    [log.syslog]
    ;level =
    # log line format, valid options are text, console and json
    ;format = text
    # Syslog network type and address. This can be udp, tcp, or unix. If left blank, the default unix endpoints will be used.
    ;network =
    ;address =
    # Syslog facility. user, daemon and local0 through local7 are valid.
    ;facility =
    # Syslog tag. By default, the process' argv[0] is used.
    ;tag =
    [log.frontend]
    # Should Sentry javascript agent be initialized
    ;enabled = false
    # Defines which provider to use, default is Sentry
    ;provider = sentry
    # Sentry DSN if you want to send events to Sentry.
    ;sentry_dsn =
    # Custom HTTP endpoint to send events captured by the Sentry agent to. Default will log the events to stdout.
    ;custom_endpoint = /log
    # Rate of events to be reported between 0 (none) and 1 (all), float
    ;sample_rate = 1.0
    # Requests per second limit enforced an extended period, for Grafana backend log ingestion endpoint (/log).
    ;log_endpoint_requests_per_second_limit = 3
    # Max requests accepted per short interval of time for Grafana backend log ingestion endpoint (/log).
    ;log_endpoint_burst_limit = 15
    # Should error instrumentation be enabled, only affects Grafana Javascript Agent
    ;instrumentations_errors_enabled = true
    # Should console instrumentation be enabled, only affects Grafana Javascript Agent
    ;instrumentations_console_enabled = false
    # Should webvitals instrumentation be enabled, only affects Grafana Javascript Agent
    ;instrumentations_webvitals_enabled = false
    # Api Key, only applies to Grafana Javascript Agent provider
    ;api_key = testApiKey
    #################################### Usage Quotas ########################
    [quota]
    ; enabled = false
    #### set quotas to -1 to make unlimited. ####
    # limit number of users per Org.
    ; org_user = 10
    # limit number of dashboards per Org.
    ; org_dashboard = 100
    # limit number of data_sources per Org.
    ; org_data_source = 10
    # limit number of api_keys per Org.
    ; org_api_key = 10
    # limit number of alerts per Org.
    ;org_alert_rule = 100
    # limit number of orgs a user can create.
    ; user_org = 10
    # Global limit of users.
    ; global_user = -1
    # global limit of orgs.
    ; global_org = -1
    # global limit of dashboards
    ; global_dashboard = -1
    # global limit of api_keys
    ; global_api_key = -1
    # global limit on number of logged in users.
    ; global_session = -1
    # global limit of alerts
    ;global_alert_rule = -1
    # global limit of correlations
    ; global_correlations = -1
    #################################### Unified Alerting ####################
    [unified_alerting]
    #Enable the Unified Alerting sub-system and interface. When enabled we'll migrate all of your alert rules and notification channels to the new system. New alert rules will be created and your notification channels will be converted into an Alertmanager configuration. Previous data is preserved to enable backwards compatibility but new data is removed.```
    ;enabled = true
    # Comma-separated list of organization IDs for which to disable unified alerting. Only supported if unified alerting is enabled.
    ;disabled_orgs =
    # Specify the frequency of polling for admin config changes.
    # The interval string is a possibly signed sequence of decimal numbers, followed by a unit suffix (ms, s, m, h, d), e.g. 30s or 1m.
    ;admin_config_poll_interval = 60s
    # Specify the frequency of polling for Alertmanager config changes.
    # The interval string is a possibly signed sequence of decimal numbers, followed by a unit suffix (ms, s, m, h, d), e.g. 30s or 1m.
    ;alertmanager_config_poll_interval = 60s
    # The redis server address that should be connected to.
    ;ha_redis_address =
    # The username that should be used to authenticate with the redis server.
    ;ha_redis_username =
    # The password that should be used to authenticate with the redis server.
    ;ha_redis_password =
    # The redis database, by default it's 0.
    ;ha_redis_db =
    # A prefix that is used for every key or channel that is created on the redis server
    # as part of HA for alerting.
    ;ha_redis_prefix =
    # The name of the cluster peer that will be used as identifier. If none is
    # provided, a random one will be generated.
    ;ha_redis_peer_name =
    # Listen address/hostname and port to receive unified alerting messages for other Grafana instances. The port is used for both TCP and UDP. It is assumed other Grafana instances are also running on the same port. The default value is `0.0.0.0:9094`.
    ;ha_listen_address = "0.0.0.0:9094"
    # Listen address/hostname and port to receive unified alerting messages for other Grafana instances. The port is used for both TCP and UDP. It is assumed other Grafana instances are also running on the same port. The default value is `0.0.0.0:9094`.
    ;ha_advertise_address = ""
    # Comma-separated list of initial instances (in a format of host:port) that will form the HA cluster. Configuring this setting will enable High Availability mode for alerting.
    ;ha_peers = ""
    # Time to wait for an instance to send a notification via the Alertmanager. In HA, each Grafana instance will
    # be assigned a position (e.g. 0, 1). We then multiply this position with the timeout to indicate how long should
    # each instance wait before sending the notification to take into account replication lag.
    # The interval string is a possibly signed sequence of decimal numbers, followed by a unit suffix (ms, s, m, h, d), e.g. 30s or 1m.
    ;ha_peer_timeout = "15s"
    # The interval between sending gossip messages. By lowering this value (more frequent) gossip messages are propagated
    # across cluster more quickly at the expense of increased bandwidth usage.
    # The interval string is a possibly signed sequence of decimal numbers, followed by a unit suffix (ms, s, m, h, d), e.g. 30s or 1m.
    ;ha_gossip_interval = "200ms"
    # The interval between gossip full state syncs. Setting this interval lower (more frequent) will increase convergence speeds
    # across larger clusters at the expense of increased bandwidth usage.
    # The interval string is a possibly signed sequence of decimal numbers, followed by a unit suffix (ms, s, m, h, d), e.g. 30s or 1m.
    ;ha_push_pull_interval = "60s"
    # Enable or disable alerting rule execution. The alerting UI remains visible. This option has a legacy version in the `[alerting]` section that takes precedence.
    ;execute_alerts = true
    # Alert evaluation timeout when fetching data from the datasource. This option has a legacy version in the `[alerting]` section that takes precedence.
    # The timeout string is a possibly signed sequence of decimal numbers, followed by a unit suffix (ms, s, m, h, d), e.g. 30s or 1m.
    ;evaluation_timeout = 30s
    # Number of times we'll attempt to evaluate an alert rule before giving up on that evaluation. This option has a legacy version in the `[alerting]` section that takes precedence.
    ;max_attempts = 3
    # Minimum interval to enforce between rule evaluations. Rules will be adjusted if they are less than this value  or if they are not multiple of the scheduler interval (10s). Higher values can help with resource management as we'll schedule fewer evaluations over time. This option has a legacy version in the `[alerting]` section that takes precedence.
    # The interval string is a possibly signed sequence of decimal numbers, followed by a unit suffix (ms, s, m, h, d), e.g. 30s or 1m.
    ;min_interval = 10s
    [unified_alerting.reserved_labels]
    # Comma-separated list of reserved labels added by the Grafana Alerting engine that should be disabled.
    # For example: `disabled_labels=grafana_folder`
    ;disabled_labels =
    [unified_alerting.state_history]
    # Enable the state history functionality in Unified Alerting. The previous states of alert rules will be visible in panels and in the UI.
    ; enabled = true
    # Select which pluggable state history backend to use. Either "annotations", "loki", or "multiple"
    # "loki" writes state history to an external Loki instance. "multiple" allows history to be written to multiple backends at once.
    # Defaults to "annotations".
    ; backend = "multiple"
    # For "multiple" only.
    # Indicates the main backend used to serve state history queries.
    # Either "annotations" or "loki"
    ; primary = "loki"
    # For "multiple" only.
    # Comma-separated list of additional backends to write state history data to.
    ; secondaries = "annotations"
    # For "loki" only.
    # URL of the external Loki instance.
    # Either "loki_remote_url", or both of "loki_remote_read_url" and "loki_remote_write_url" is required for the "loki" backend.
    ; loki_remote_url = "http://loki:3100"
    # For "loki" only.
    # URL of the external Loki's read path. To be used in configurations where Loki has separated read and write URLs.
    # Either "loki_remote_url", or both of "loki_remote_read_url" and "loki_remote_write_url" is required for the "loki" backend.
    ; loki_remote_read_url = "http://loki-querier:3100"
    # For "loki" only.
    # URL of the external Loki's write path. To be used in configurations where Loki has separated read and write URLs.
    # Either "loki_remote_url", or both of "loki_remote_read_url" and "loki_remote_write_url" is required for the "loki" backend.
    ; loki_remote_write_url = "http://loki-distributor:3100"
    # For "loki" only.
    # Optional tenant ID to attach to requests sent to Loki.
    ; loki_tenant_id = 123
    # For "loki" only.
    # Optional username for basic authentication on requests sent to Loki. Can be left blank to disable basic auth.
    ; loki_basic_auth_username = "myuser"
    # For "loki" only.
    # Optional password for basic authentication on requests sent to Loki. Can be left blank.
    ; loki_basic_auth_password = "mypass"
    [unified_alerting.state_history.external_labels]
    # Optional extra labels to attach to outbound state history records or log streams.
    # Any number of label key-value-pairs can be provided.
    ; mylabelkey = mylabelvalue
    #################################### Alerting ############################
    [alerting]
    # Disable legacy alerting engine & UI features
    ;enabled = false
    # Makes it possible to turn off alert execution but alerting UI is visible
    ;execute_alerts = true
    # Default setting for new alert rules. Defaults to categorize error and timeouts as alerting. (alerting, keep_state)
    ;error_or_timeout = alerting
    # Default setting for how Grafana handles nodata or null values in alerting. (alerting, no_data, keep_state, ok)
    ;nodata_or_nullvalues = no_data
    # Alert notifications can include images, but rendering many images at the same time can overload the server
    # This limit will protect the server from render overloading and make sure notifications are sent out quickly
    ;concurrent_render_limit = 5
    # Default setting for alert calculation timeout. Default value is 30
    ;evaluation_timeout_seconds = 30
    # Default setting for alert notification timeout. Default value is 30
    ;notification_timeout_seconds = 30
    # Default setting for max attempts to sending alert notifications. Default value is 3
    ;max_attempts = 3
    # Makes it possible to enforce a minimal interval between evaluations, to reduce load on the backend
    ;min_interval_seconds = 1
    # Configures for how long alert annotations are stored. Default is 0, which keeps them forever.
    # This setting should be expressed as a duration. Examples: 6h (hours), 10d (days), 2w (weeks), 1M (month).
    ;max_annotation_age =
    # Configures max number of alert annotations that Grafana stores. Default value is 0, which keeps all alert annotations.
    ;max_annotations_to_keep =
    #################################### Annotations #########################
    [annotations]
    # Configures the batch size for the annotation clean-up job. This setting is used for dashboard, API, and alert annotations.
    ;cleanupjob_batchsize = 100
    # Enforces the maximum allowed length of the tags for any newly introduced annotations. It can be between 500 and 4096 inclusive (which is the respective's column length). Default value is 500.
    # Setting it to a higher value would impact performance therefore is not recommended.
    ;tags_length = 500
    [annotations.dashboard]
    # Dashboard annotations means that annotations are associated with the dashboard they are created on.
    # Configures how long dashboard annotations are stored. Default is 0, which keeps them forever.
    # This setting should be expressed as a duration. Examples: 6h (hours), 10d (days), 2w (weeks), 1M (month).
    ;max_age =
    # Configures max number of dashboard annotations that Grafana stores. Default value is 0, which keeps all dashboard annotations.
    ;max_annotations_to_keep =
    [annotations.api]
    # API annotations means that the annotations have been created using the API without any
    # association with a dashboard.
    # Configures how long Grafana stores API annotations. Default is 0, which keeps them forever.
    # This setting should be expressed as a duration. Examples: 6h (hours), 10d (days), 2w (weeks), 1M (month).
    ;max_age =
    # Configures max number of API annotations that Grafana keeps. Default value is 0, which keeps all API annotations.
    ;max_annotations_to_keep =
    #################################### Explore #############################
    [explore]
    # Enable the Explore section
    ;enabled = true
    #################################### Help #############################
    [help]
    # Enable the Help section
    ;enabled = true
    #################################### Profile #############################
    [profile]
    # Enable the Profile section
    ;enabled = true
    #################################### Query History #############################
    [query_history]
    # Enable the Query history
    ;enabled = true
    #################################### Internal Grafana Metrics ##########################
    # Metrics available at HTTP URL /metrics and /metrics/plugins/:pluginId
    [metrics]
    # Disable / Enable internal metrics
    ;enabled           = true
    # Graphite Publish interval
    ;interval_seconds  = 10
    # Disable total stats (stat_totals_*) metrics to be generated
    ;disable_total_stats = false
    #If both are set, basic auth will be required for the metrics endpoints.
    ; basic_auth_username =
    ; basic_auth_password =
    # Metrics environment info adds dimensions to the `grafana_environment_info` metric, which
    # can expose more information about the Grafana instance.
    [metrics.environment_info]
    #exampleLabel1 = exampleValue1
    #exampleLabel2 = exampleValue2
    # Send internal metrics to Graphite
    [metrics.graphite]
    # Enable by setting the address setting (ex localhost:2003)
    ;address =
    ;prefix = prod.grafana.%(instance_name)s.
    #################################### Grafana.com integration  ##########################
    # Url used to import dashboards directly from Grafana.com
    [grafana_com]
    ;url = https://grafana.com
    ;api_url = https://grafana.com/api
    #################################### Distributed tracing ############
    # Opentracing is deprecated use opentelemetry instead
    [tracing.jaeger]
    # Enable by setting the address sending traces to jaeger (ex localhost:6831)
    ;address = localhost:6831
    # Tag that will always be included in when creating new spans. ex (tag1:value1,tag2:value2)
    ;always_included_tag = tag1:value1
    # Type specifies the type of the sampler: const, probabilistic, rateLimiting, or remote
    ;sampler_type = const
    # jaeger samplerconfig param
    # for "const" sampler, 0 or 1 for always false/true respectively
    # for "probabilistic" sampler, a probability between 0 and 1
    # for "rateLimiting" sampler, the number of spans per second
    # for "remote" sampler, param is the same as for "probabilistic"
    # and indicates the initial sampling rate before the actual one
    # is received from the mothership
    ;sampler_param = 1
    # sampling_server_url is the URL of a sampling manager providing a sampling strategy.
    ;sampling_server_url =
    # Whether or not to use Zipkin propagation (x-b3- HTTP headers).
    ;zipkin_propagation = false
    # Setting this to true disables shared RPC spans.
    # Not disabling is the most common setting when using Zipkin elsewhere in your infrastructure.
    ;disable_shared_zipkin_spans = false
    [tracing.opentelemetry]
    # attributes that will always be included in when creating new spans. ex (key1:value1,key2:value2)
    ;custom_attributes = key1:value1,key2:value2
    [tracing.opentelemetry.jaeger]
    # jaeger destination (ex http://localhost:14268/api/traces)
    ; address = http://localhost:14268/api/traces
    # Propagation specifies the text map propagation format: w3c, jaeger
    ; propagation = jaeger
    # This is a configuration for OTLP exporter with GRPC protocol
    [tracing.opentelemetry.otlp]
    # otlp destination (ex localhost:4317)
    ; address = localhost:4317
    # Propagation specifies the text map propagation format: w3c, jaeger
    ; propagation = w3c
    #################################### External image storage ##########################
    [external_image_storage]
    # Used for uploading images to public servers so they can be included in slack/email messages.
    # you can choose between (s3, webdav, gcs, azure_blob, local)
    ;provider =
    [external_image_storage.s3]
    ;endpoint =
    ;path_style_access =
    ;bucket =
    ;region =
    ;path =
    ;access_key =
    ;secret_key =
    [external_image_storage.webdav]
    ;url =
    ;public_url =
    ;username =
    ;password =
    [external_image_storage.gcs]
    ;key_file =
    ;bucket =
    ;path =
    [external_image_storage.azure_blob]
    ;account_name =
    ;account_key =
    ;container_name =
    ;sas_token_expiration_days =
    [external_image_storage.local]
    # does not require any configuration
    [rendering]
    # Options to configure a remote HTTP image rendering service, e.g. using https://github.com/grafana/grafana-image-renderer.
    # URL to a remote HTTP image renderer service, e.g. http://localhost:8081/render, will enable Grafana to render panels and dashboards to PNG-images using HTTP requests to an external service.
    ;server_url =
    # If the remote HTTP image renderer service runs on a different server than the Grafana server you may have to configure this to a URL where Grafana is reachable, e.g. http://grafana.domain/.
    ;callback_url =
    # An auth token that will be sent to and verified by the renderer. The renderer will deny any request without an auth token matching the one configured on the renderer side.
    ;renderer_token = -
    # Concurrent render request limit affects when the /render HTTP endpoint is used. Rendering many images at the same time can overload the server,
    # which this setting can help protect against by only allowing a certain amount of concurrent requests.
    ;concurrent_render_request_limit = 30
    # Determines the lifetime of the render key used by the image renderer to access and render Grafana.
    # This setting should be expressed as a duration. Examples: 10s (seconds), 5m (minutes), 2h (hours).
    # Default is 5m. This should be more than enough for most deployments.
    # Change the value only if image rendering is failing and you see `Failed to get the render key from cache` in Grafana logs.
    ;render_key_lifetime = 5m
    [panels]
    # If set to true Grafana will allow script tags in text panels. Not recommended as it enable XSS vulnerabilities.
    ;disable_sanitize_html = false
    [plugins]
    ;enable_alpha = false
    ;app_tls_skip_verify_insecure = false
    # Enter a comma-separated list of plugin identifiers to identify plugins to load even if they are unsigned. Plugins with modified signatures are never loaded.
    allow_loading_unsigned_plugins = antgroup-yaml-panel,antgroup-tkptable-panel
    # Enable or disable installing / uninstalling / updating plugins directly from within Grafana.
    ;plugin_admin_enabled = false
    ;plugin_admin_external_manage_enabled = false
    ;plugin_catalog_url = https://grafana.com/grafana/plugins/
    # Enter a comma-separated list of plugin identifiers to hide in the plugin catalog.
    ;plugin_catalog_hidden_plugins =
    # Log all backend requests for core and external plugins.
    ;log_backend_requests = false
    # Force download of public key for verifying plugin signature on startup.
    ;enforce_public_key_download = false
    #################################### Grafana Live ##########################################
    [live]
    # max_connections to Grafana Live WebSocket endpoint per Grafana server instance. See Grafana Live docs
    # if you are planning to make it higher than default 100 since this can require some OS and infrastructure
    # tuning. 0 disables Live, -1 means unlimited connections.
    ;max_connections = 100
    # allowed_origins is a comma-separated list of origins that can establish connection with Grafana Live.
    # If not set then origin will be matched over root_url. Supports wildcard symbol "*".
    ;allowed_origins =
    # engine defines an HA (high availability) engine to use for Grafana Live. By default no engine used - in
    # this case Live features work only on a single Grafana server. Available options: "redis".
    # Setting ha_engine is an EXPERIMENTAL feature.
    ;ha_engine =
    # ha_engine_address sets a connection address for Live HA engine. Depending on engine type address format can differ.
    # For now we only support Redis connection address in "host:port" format.
    # This option is EXPERIMENTAL.
    ;ha_engine_address = "127.0.0.1:6379"
    #################################### Grafana Image Renderer Plugin ##########################
    [plugin.grafana-image-renderer]
    # Instruct headless browser instance to use a default timezone when not provided by Grafana, e.g. when rendering panel image of alert.
    # See ICU’s metaZones.txt (https://cs.chromium.org/chromium/src/third_party/icu/source/data/misc/metaZones.txt) for a list of supported
    # timezone IDs. Fallbacks to TZ environment variable if not set.
    ;rendering_timezone =
    # Instruct headless browser instance to use a default language when not provided by Grafana, e.g. when rendering panel image of alert.
    # Please refer to the HTTP header Accept-Language to understand how to format this value, e.g. 'fr-CH, fr;q=0.9, en;q=0.8, de;q=0.7, *;q=0.5'.
    ;rendering_language =
    # Instruct headless browser instance to use a default device scale factor when not provided by Grafana, e.g. when rendering panel image of alert.
    # Default is 1. Using a higher value will produce more detailed images (higher DPI), but will require more disk space to store an image.
    ;rendering_viewport_device_scale_factor =
    # Instruct headless browser instance whether to ignore HTTPS errors during navigation. Per default HTTPS errors are not ignored. Due to
    # the security risk it's not recommended to ignore HTTPS errors.
    ;rendering_ignore_https_errors =
    # Instruct headless browser instance whether to capture and log verbose information when rendering an image. Default is false and will
    # only capture and log error messages. When enabled, debug messages are captured and logged as well.
    # For the verbose information to be included in the Grafana server log you have to adjust the rendering log level to debug, configure
    # [log].filter = rendering:debug.
    ;rendering_verbose_logging =
    # Instruct headless browser instance whether to output its debug and error messages into running process of remote rendering service.
    # Default is false. This can be useful to enable (true) when troubleshooting.
    ;rendering_dumpio =
    # Additional arguments to pass to the headless browser instance. Default is --no-sandbox. The list of Chromium flags can be found
    # here (https://peter.sh/experiments/chromium-command-line-switches/). Multiple arguments is separated with comma-character.
    ;rendering_args =
    # You can configure the plugin to use a different browser binary instead of the pre-packaged version of Chromium.
    # Please note that this is not recommended, since you may encounter problems if the installed version of Chrome/Chromium is not
    # compatible with the plugin.
    ;rendering_chrome_bin =
    # Instruct how headless browser instances are created. Default is 'default' and will create a new browser instance on each request.
    # Mode 'clustered' will make sure that only a maximum of browsers/incognito pages can execute concurrently.
    # Mode 'reusable' will have one browser instance and will create a new incognito page on each request.
    ;rendering_mode =
    # When rendering_mode = clustered, you can instruct how many browsers or incognito pages can execute concurrently. Default is 'browser'
    # and will cluster using browser instances.
    # Mode 'context' will cluster using incognito pages.
    ;rendering_clustering_mode =
    # When rendering_mode = clustered, you can define the maximum number of browser instances/incognito pages that can execute concurrently. Default is '5'.
    ;rendering_clustering_max_concurrency =
    # When rendering_mode = clustered, you can specify the duration a rendering request can take before it will time out. Default is `30` seconds.
    ;rendering_clustering_timeout =
    # Limit the maximum viewport width, height and device scale factor that can be requested.
    ;rendering_viewport_max_width =
    ;rendering_viewport_max_height =
    ;rendering_viewport_max_device_scale_factor =
    # Change the listening host and port of the gRPC server. Default host is 127.0.0.1 and default port is 0 and will automatically assign
    # a port not in use.
    ;grpc_host =
    ;grpc_port =
    [support_bundles]
    # Enable support bundle creation (default: true)
    #enabled = true
    # Only server admins can generate and view support bundles (default: true)
    #server_admin_only = true
    # If set, bundles will be encrypted with the provided public keys separated by whitespace
    #public_keys = ""
    [enterprise]
    # Path to a valid Grafana Enterprise license.jwt file
    ;license_path =
    [feature_toggles]
    # there are currently two ways to enable feature toggles in the `grafana.ini`.
    # you can either pass an array of feature you want to enable to the `enable` field or
    # configure each toggle by setting the name of the toggle to true/false. Toggles set to true/false
    # will take presidence over toggles in the `enable` list.
    ;enable = feature1,feature2
    ;feature1 = true
    ;feature2 = false
    [date_formats]
    # For information on what formatting patterns that are supported https://momentjs.com/docs/#/displaying/
    # Default system date format used in time range picker and other places where full time is displayed
    ;full_date = YYYY-MM-DD HH:mm:ss
    # Used by graph and other places where we only show small intervals
    ;interval_second = HH:mm:ss
    ;interval_minute = HH:mm
    ;interval_hour = MM/DD HH:mm
    ;interval_day = MM/DD
    ;interval_month = YYYY-MM
    ;interval_year = YYYY
    # Experimental feature
    ;use_browser_locale = false
    # Default timezone for user preferences. Options are 'browser' for the browser local timezone or a timezone name from IANA Time Zone database, e.g. 'UTC' or 'Europe/Amsterdam' etc.
    ;default_timezone = browser
    [expressions]
    # Enable or disable the expressions functionality.
    ;enabled = true
    [geomap]
    # Set the JSON configuration for the default basemap
    ;default_baselayer_config = `{
    ;  "type": "xyz",
    ;  "config": {
    ;    "attribution": "Open street map",
    ;    "url": "https://tile.openstreetmap.org/{z}/{x}/{y}.png"
    ;  }
    ;}`
    # Enable or disable loading other base map layers
    ;enable_custom_baselayers = true
    # Move an app plugin referenced by its id (including all its pages) to a specific navigation section
    [navigation.app_sections]
    # The following will move an app plugin with the id of `my-app-id` under the `starred` section
    # my-app-id = admin
    # Move a specific app plugin page (referenced by its `path` field) to a specific navigation section
    [navigation.app_standalone_pages]
    # The following will move the page with the path "/a/my-app-id/starred-content" from `my-app-id` to the `starred` section
    # /a/my-app-id/starred-content = starred
    #################################### Secure Socks5 Datasource Proxy #####################################
    [secure_socks_datasource_proxy]
    ; enabled = false
    ; root_ca_cert =
    ; client_key =
    ; client_cert =
    ; server_name =
    # The address of the socks5 proxy datasources should connect to
    ; proxy_address =