apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: grafanadi
  name: grafanadi
  namespace: {{ .Values.namespace }}
spec:
  selector:
    matchLabels:
      app: grafanadi
  template:
    metadata:
      labels:
        app: grafanadi
    spec:
      securityContext:
        fsGroup: 472
        supplementalGroups:
          - 0
      initContainers:
      - command:
        - bash
        - -c
        - |
          echo "Waiting for Elasticsearch cluster to be ready..."
          wait_time=1
          # check es cluster health status
          while true;
          do
            status=`curl -s -XGET --connect-timeout 3 --max-time 5 \
            "http://es-cluster-svc.{{ .Values.namespace }}:9200/_cluster/health?pretty" \
            | awk -F'"' '/"status"/{print $4}'`
            if [ -n "${status}" ] && [ "${status}" != "red" ];
            then
              echo "Elasticsearch is healthy, status is: ${status}"
              break
            else
              echo "Elasticsearch is unhealthy, status is: ${status}"
              wait_time=$((wait_time+wait_time))
              echo "Rechecking the status after ${wait_time}s..."
              sleep ${wait_time}
            fi
          done
        image: {{ .Values.lunettesImage }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        name: init
      containers:
      - command:
        - ./grafanadi
        - --config-file=/app/config-file.yaml
        - --enable-kube-client={{ .Values.grafanadiInitKubeClient }}
        - --log_dir={{ .Values.grafanadiLogsPath }}
        - --logtostderr=false
        - --v=6
        name: grafanadi
        image: {{ .Values.lunettesImage }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        ports:
        - containerPort: 8080
          name: http-grafanadi
          protocol: TCP
        resources:
{{ toYaml .Values.grafanadiResources | indent 10 }}
        volumeMounts:
        - mountPath: {{ .Values.grafanadiLogsPath }}
          name: logs
        - mountPath: /var/grafana
          name: grafana-pv
        - mountPath: /app/config-file.yaml
          name: cm-vol
          readOnly: true
          subPath: config-file.yaml
      volumes:
      - name: grafana-pv
        hostPath:
          path: /data/volume/grafana
      - name: logs
        hostPath:
          path: {{ .Values.grafanadiLogsHostPath }}
          type: DirectoryOrCreate
      - configMap:
          defaultMode: 420
          name: grafanadi-cm
        name: cm-vol